<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<!-- XT:xUssUsBuDRfxCMDCkDNlZy4otprOPpf4YL8A0a8gtXGcgGuzT8jvy7PiqwyhQTAW -->

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1250">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 11">
<meta name=Originator content="Microsoft Word 11">
<link rel=File-List href="asd_test_2009_files/filelist.xml">
<link rel=Edit-Time-Data href="asd_test_2009_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Edukacja</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="metricconverter"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Rajko</o:Author>
  <o:LastAuthor>Jezyk</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>978</o:TotalTime>
  <o:Created>2009-02-13T07:24:00Z</o:Created>
  <o:LastSaved>2009-02-13T07:24:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>5856</o:Words>
  <o:Characters>35141</o:Characters>
  <o:Company>-</o:Company>
  <o:Lines>292</o:Lines>
  <o:Paragraphs>81</o:Paragraphs>
  <o:CharactersWithSpaces>40916</o:CharactersWithSpaces>
  <o:Version>11.6568</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:HyphenationZone>21</w:HyphenationZone>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:DontGrowAutofit/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" LatentStyleCount="156">
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;
	mso-font-charset:238;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-1610611985 1073750139 0 0 159 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
span.MsoEndnoteReference
	{mso-style-noshow:yes;
	vertical-align:super;}
p.MsoEndnoteText, li.MsoEndnoteText, div.MsoEndnoteText
	{mso-style-noshow:yes;
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;
	text-underline:single;}
p.Default, li.Default, div.Default
	{mso-style-name:Default;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	mso-layout-grid-align:none;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:Calibri;
	color:black;
	mso-fareast-language:EN-US;}
span.texhtml
	{mso-style-name:texhtml;}
 /* Page Definitions */
 @page
	{mso-footnote-separator:url("asd_test_2009_files/header.htm") fs;
	mso-footnote-continuation-separator:url("asd_test_2009_files/header.htm") fcs;
	mso-endnote-separator:url("asd_test_2009_files/header.htm") es;
	mso-endnote-continuation-separator:url("asd_test_2009_files/header.htm") ecs;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 28.3pt 70.85pt 36.0pt;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 @list l0
	{mso-list-id:613437592;
	mso-list-type:hybrid;
	mso-list-template-ids:-1170470980 68485121 68485123 68485125 68485121 68485123 68485125 68485121 68485123 68485125;}
@list l0:level1
	{mso-level-start-at:0;
	mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;
	mso-fareast-font-family:"Times New Roman";
	mso-bidi-font-family:"Times New Roman";}
@list l1
	{mso-list-id:1785732881;
	mso-list-type:hybrid;
	mso-list-template-ids:1854465492 68485135 68485121 68485147 68485135 68485145 68485147 68485135 68485145 68485147;}
@list l1:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1:level2
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	font-family:Symbol;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";
	mso-ansi-language:#0400;
	mso-fareast-language:#0400;
	mso-bidi-language:#0400;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="2050"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=PL link=blue vlink=purple style='tab-interval:35.4pt'>

<div class=Section1>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>B-drzewo:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>jest drzewem zrównowa¿onym</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>jest
drzewem binarnym<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>jest
drzewem binarnym pe³nym<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>jest
drzewem AVL<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>ma
operacjê sumowania elementów w czasie<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* wg niektórych Ÿróde³ 'b' w
'b-drzewie' znaczy balanced (zrównowa¿one). B-drzewo z definicji jest zrównowa¿one.
Szczególn¹ w³asnoœci¹ b-drzewa jest jego szerokoœæ/roz³o¿ystoœc. W b-drzewie
ka¿dy wierzcho³ek poza korzeniem musi mieæ n...2n+1 wêz³ów potomnych.
Wierzcho³ek drzewa binarnego z definicji ma &lt;= 2 wêz³y potomne, a drzewo AVL
z definicji jest drzewem binarnym</span><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Drzewo AVL:<o:p></o:p></span></b></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>koszt pesymistyczny wyszukiwania elementu
wynosi O(logn)<o:p></o:p></span></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>jest drzewem BST <o:p></o:p></span></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>jest drzewem binarnym</span><span
style='font-size:10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>*<span style='mso-bidi-font-weight:bold'>Drzewo AVL</span>,
nazywane równie¿ <span style='mso-bidi-font-weight:bold'>drzewem dopuszczalnym</span>,
to zrównowa¿one binarne drzewo poszukiwañ (BST)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>Algorytmy podstawowych operacji na drzewie AVL przypominaj¹ te z
binarnych drzew poszukiwañ, ale s¹ poprzedzane lub nastêpuj¹ po nich jedna lub
wiêcej &quot;rotacji&quot;. Wszystkie algorytmy s¹ zazwyczaj realizowane
poprzez rekurencjê. Koszt ka¿dej operacji to O(log n).<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 1 0 3 4 6 2 5. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
2 5 6 4 3 1<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
2 5 6 4 3 1<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany</span><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 6 4 3 5 2 0 1. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:18.0pt;margin-bottom:.0001pt;mso-layout-grid-align:none;
text-autospace:none'><span style='font-size:10.0pt'>1 0 2 3 5 4 6 <span
style='mso-tab-count:1'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:18.0pt;margin-bottom:.0001pt;mso-layout-grid-align:none;
text-autospace:none'><span style='font-size:10.0pt'>1 0 2 3 5 4 6 <span
style='mso-tab-count:1'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 0 4 1 2 3 6 5. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>3
2 1 5 6 4 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>3
2 1 5 6 4 0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 4 0 6 1 3 5 2. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>2
3 1 0 5 6 4<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>2
3 1 0 5 6 4<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 2 0 6 4 3 1 5.Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>1
0 3 5 4 6 2<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>1
0 3 5 4 6 2<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 2 5 3 6 1 0 4 .Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
1 4 3 6 5 2 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
1 4 3 6 5 2 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 3 2 5 4 0 6 1 .Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>1
0 2 4 6 5 3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>1
0 2 4 6 5 3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 3 0 6 2 4 1 5. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>1
2 0 5 4 6 3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>1
2 0 5 4 6 3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 6 4 5 1 0 2 3. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
3 2 1 5 4 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
3 2 1 5 4 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 5 1 0 3 6 2 4. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku inorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 1 2 3 4 5 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
2 4 3 1 6 5 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
2 4 3 1 6 5<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* inOrder jest zawsze posortowany<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>13.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 6 0 5 3 1 4 2. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku postorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2 1 4 3 5 0 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2 1 4 3 5 0 6</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
1 2 3 4 5 6 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shapetype
 id="_x0000_t75" coordsize="21600,21600" o:spt="75" o:preferrelative="t"
 path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1035" type="#_x0000_t75" style='width:110.25pt;
 height:112.5pt'>
 <v:imagedata src="asd_test_2009_files/image001.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=147 height=150
src="asd_test_2009_files/image002.jpg" v:shapes="_x0000_i1035"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>14.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 2 6 0 3 5 4 1. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku postorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>1 0 4 5 3 6 2 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>1 0 4 5 3 6 2</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
1 2 3 4 5 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1031" type="#_x0000_t75" style='width:122.25pt;height:104.25pt'>
 <v:imagedata src="asd_test_2009_files/image003.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=163 height=139
src="asd_test_2009_files/image004.jpg" v:shapes="_x0000_i1031"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>15.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno<span style='mso-bidi-font-weight:bold'>: 1 5 3 2 0 6
4. </span>Wypisuj¹c wartoœci wêz³ów przy przejœciu drzewa w porz¹dku postorder,
otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 2 4 3 6 5 1 <o:p></o:p></span></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 2 4 3 6 5 1</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt'>0 1
2 3 4 5 6 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1032" type="#_x0000_t75" style='width:120.75pt;height:90pt'>
 <v:imagedata src="asd_test_2009_files/image005.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=161 height=120
src="asd_test_2009_files/image006.jpg" v:shapes="_x0000_i1032"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>16.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 3 0 6 2 4 1 5. Wypisuj¹c wartoœci wêz³ów przy
przejœciu tego drzewa w porz¹dku postorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:2.85pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'>0 1 2 3 4 5 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt;background:aqua;mso-highlight:aqua'>1 2 0 5 4 6 3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt;background:aqua;mso-highlight:aqua'>1 2 0 5 4 6 3</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1033" type="#_x0000_t75"
 style='width:129pt;height:96.75pt'>
 <v:imagedata src="asd_test_2009_files/image007.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=172 height=129
src="asd_test_2009_files/image008.jpg" v:shapes="_x0000_i1033"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>17.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: <span style='mso-bidi-font-weight:bold'>2 6 0 3 5 4
1</span>. Wypisuj¹c wartoœci wêz³ów przy przejœciu tego drzewa w porz¹dku
postorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:2.85pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>1 0 4 5 3 6 2 <o:p></o:p></span></p>

<p class=Default style='text-indent:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>1 0 4 5 3 6 2</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'>0 1 2 3 4 5 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt'><!--[if gte vml 1]><v:shape id="_x0000_i1034" type="#_x0000_t75"
 style='width:130.5pt;height:108pt'>
 <v:imagedata src="asd_test_2009_files/image009.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=174 height=144
src="asd_test_2009_files/image010.jpg" v:shapes="_x0000_i1034"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>18.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 1 4 3 2 5 0 6. <span
style='mso-spacerun:yes'> </span>Wypisuj¹c wartoœci wêz³ów przy przejœciu
drzewa w porz¹dku postorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 2 3 6 5 4 1 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 2 3 6 5 4 1</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
1 2 3 4 5 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1036" type="#_x0000_t75" style='width:120.75pt;height:93.75pt'>
 <v:imagedata src="asd_test_2009_files/image011.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=161 height=125
src="asd_test_2009_files/image012.jpg" v:shapes="_x0000_i1036"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>19.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wstawiamy do
pustego drzewa BST kolejno: 1 5 3 2 0 6 4. Wypisuj¹c wartoœci wêz³ów przy
przejœciu drzewa w porz¹dku postorder, otrzymamy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 2 4 3 6 5 1 <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 2 4 3 6 5 1</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>0
1 2 3 4 5 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1037" type="#_x0000_t75" style='width:121.5pt;height:90.75pt'>
 <v:imagedata src="asd_test_2009_files/image013.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=162 height=121
src="asd_test_2009_files/image014.jpg" v:shapes="_x0000_i1037"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>20.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf niekierowany:
a--b, b--c, c --a. Wykonujemy na nim DFS z punktu ”a” i oznaczamy czasy
rozpoczêcia i zakoñczenia. Notuj¹c x (p/f), gdzie x-wierzcho³ek, p-czas
rozpoczêcia, f-czas zakoñczenia przetwarzania, mo¿emy otrzymaæ:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>a(0/5),
b(1/3), c(2/4) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>a(0/3),
b(1/4), c(2/5) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>a(0/5),
b(1/2), c(3/4) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1038" type="#_x0000_t75" style='width:120.75pt;height:66.75pt'>
 <v:imagedata src="asd_test_2009_files/image015.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=161 height=89
src="asd_test_2009_files/image016.jpg" v:shapes="_x0000_i1038"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>*wg mnie zaczynamy z pkt a przechodzimy przez ka¿dy pkt wiec a=0
b=1 c=2 (odpada odp c) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>Jeœli dojdziemy do takiego wierzcho³ka, ¿e nie ma on krawêdzi
incydentych z nieodwiedzonymi wierzcho³kami, nale¿y usun¹æ go ze stosu i pobraæ
ze stosu kolejny wierzcho³ek do przeszukania. </span><span style='font-size:
6.0pt;mso-bidi-font-size:9.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>21.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a,b,c,d} i krawêdzi a-&gt;b, b-&gt;c, c-&gt;d,
d-&gt;a. Jest on:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>drzewem<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pe³ny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>acykliczny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1039" type="#_x0000_t75" style='width:93.75pt;height:83.25pt'>
 <v:imagedata src="asd_test_2009_files/image017.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=125 height=111
src="asd_test_2009_files/image018.jpg" v:shapes="_x0000_i1039"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>* ma cykl, wiêc nie jest acykliczny i nie jest drzewem. Na graf
pe³ny trochê mu brakuje krawêdzi<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>22.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a,b,c,d} i krawêdzi a-&gt;b, a-&gt;c,
b-&gt;a, b-&gt;c, c-&gt;a, c-&gt;b. Jest on:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>spójny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>drzewem<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pe³ny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>acykliczny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1040" type="#_x0000_t75" style='width:111.75pt;height:74.25pt'>
 <v:imagedata src="asd_test_2009_files/image019.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=149 height=99
src="asd_test_2009_files/image020.jpg" v:shapes="_x0000_i1040"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>*Graf nazywamy spójnym, jeœli dla ka¿dej pary wierzcho³ków
istnieje marszruta je ³¹cz¹ca. Zatem nie jest spójny (z powodu wierzcho³ka D)<br>
Graf pe³ny jest grafem prostym, w którym dla ka¿dej pary wêz³ów istnieje krawêdŸ
je ³¹cz¹ca. Zatem nie jest pe³ny (jw.).<br>
Drzewo to graf spójny bez cykli, wiêc dany graf równie¿ nie jest drzewem<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>23.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a,b} i krawêdzi a-&gt;b,<span
style='mso-spacerun:yes'>  </span>b-&gt;a. Jest on:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pe³ny</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>acykliczny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>spójny</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1041" type="#_x0000_t75" style='width:36.75pt;height:68.25pt'>
 <v:imagedata src="asd_test_2009_files/image021.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=49 height=91
src="asd_test_2009_files/image022.jpg" v:shapes="_x0000_i1041"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* jest pe³ny i spójny, ma cykl</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>24.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a,b,c,d} i krawêdzi a-&gt;b. Jest on:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>acykliczny</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>spójny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pe³ny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1028" type="#_x0000_t75" style='width:156.75pt;height:88.5pt'>
 <v:imagedata src="asd_test_2009_files/image023.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=209 height=118
src="asd_test_2009_files/image024.jpg" v:shapes="_x0000_i1028"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'>* wszystko jasne </span><span
style='font-size:9.0pt;mso-bidi-font-size:10.0pt;font-family:Wingdings;
mso-ascii-font-family:"Times New Roman";mso-hansi-font-family:"Times New Roman";
color:#FF6600;mso-char-type:symbol;mso-symbol-font-family:Wingdings'><span
style='mso-char-type:symbol;mso-symbol-font-family:Wingdings'>J</span></span><span
style='font-size:9.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>25.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a} i krawêdzi a-&gt;a. Jest on:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pe³ny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>acykliczny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>drzewem<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>spójny</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1029" type="#_x0000_t75" style='width:66.75pt;height:36.75pt'>
 <v:imagedata src="asd_test_2009_files/image025.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=89 height=49
src="asd_test_2009_files/image026.jpg" v:shapes="_x0000_i1029"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* za wiki: Graf pe³ny jest grafem
prostym, w którym dla ka¿dej pary wêz³ów istnieje krawêdŸ je ³¹cz¹ca. Graf
prosty - graf bez <u>pêtli</u> i krawêdzi wielokrotnych. Zatem nie jest grafem
pe³nym (ale chyba trzeba jeszcze zajrzeæ do wyk³adu dr Chrzastowskiego)</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>26.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a,b,c,d} i krawêdzi a-&gt;b, c-&gt;d. Jest
on:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>acykliczny</span><span style='font-size:
10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>spójny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pe³ny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1030" type="#_x0000_t75" style='width:135.75pt;height:120pt'>
 <v:imagedata src="asd_test_2009_files/image027.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=181 height=160
src="asd_test_2009_files/image028.jpg" v:shapes="_x0000_i1030"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>27.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy graf
skierowany z³o¿ony z wierzcho³ków {a,b,c,d} i krawêdzi a-&gt;b, b-&gt;a,
c-&gt;d, d-&gt;c. Jest on:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>spójny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>drzewem<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pe³ny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>acykliczny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><!--[if gte vml 1]><v:shape
 id="_x0000_i1042" type="#_x0000_t75" style='width:2in;height:121.5pt'>
 <v:imagedata src="asd_test_2009_files/image029.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=192 height=162
src="asd_test_2009_files/image030.jpg" v:shapes="_x0000_i1042"><![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* graf jest dwudzielny, wiêc nie jest
spójny, wiêc nie jest drzewem i tym bardziej nie jest pe³ny</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>28.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Listê, ze
zmodyfikowan¹ operacj¹ get, który przesuwa ¿¹dany element na pocz¹tek listy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>warto u¿ywaæ, kiedy wiêkszoœæ operacji get
tyczy siê ma³ego podzbioru elementów tej listy</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>warto
u¿ywaæ, kiedy wiêkszoœæ operacji get tyczy siê ró¿nych elementów tej listy<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>warto u¿ywaæ, kiedy wiêkszoœæ operacji
tyczy siê jednego elementu</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>zawsze
warto u¿ywaæ, kiedy wiêkszoœæ operacji, to operacje get<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>warto
u¿ywaæ dla losowych danych<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>* szukaj¹c na liœcie elementu, trzeba j¹ ca³¹ przeszukiwaæ od
pocz¹tku, zatem im czêœciej bêdziemy szukali elementu (grupy elementów)
znajduj¹cego siê na pocz¹tku, tym lepiej dla nas. Wrzucanie wszystkich
elementów na pocz¹tek nam nic nie da, bo œrednio i tak bêdzie dany element w
œrodku.<o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>29.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Listê, ze
zmodyfikowan¹ operacj¹ get, który przesuwa ¿¹dany element na koniec listy:<span
style='mso-tab-count:1'>          </span><o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>warto
u¿ywaæ, kiedy wiêkszoœæ operacji tyczy siê jednego elementu<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>zawsze
warto u¿ywaæ, kiedy wiêkszoœæ operacji, to operacje get<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>warto u¿ywaæ, kiedy wiêkszoœæ operacji get
tyczy siê ró¿nych elementów tej listy</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>warto
u¿ywaæ, kiedy wiêkszoœæ operacji get tyczy siê ma³ego podzbioru elementów tej
listy<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>warto
u¿ywaæ, dla losowych danych<o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
color:#FF6600'>* Jak w przypadku przesuwania na pocz¹tek, tyle ¿e na odwrót;) generalnie
op³aca siê, jesli dziêki temu ju¿ nie bêdziemy musieli przez nie 'przechodziæ'
przeszukuj¹c listê. Dzieje siê tak wy³acznie w przypadku, gdy szukamy ró¿nych
elementów</span><b style='mso-bidi-font-weight:normal'><span style='font-size:
7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>30.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Które z
ni¿ej wymienionych wymagaj¹ co najmniej O(n) dodatkowej pamiêci:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>CountSort</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Sortowanie
b¹belkowe <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>SelectionSort<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>*przy okazji <span style='mso-bidi-font-style:italic'>merge sort
</span>wymaga <span class=texhtml><span style='mso-bidi-font-style:italic'>O</span>(<span
style='mso-bidi-font-style:italic'>n</span>)</span> dodatkowej pamiêci<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>31.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ
pesymistyczn¹ pamiêciow¹ z oczekiwan¹ obliczeniow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mog¹ byæ sobie równe <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pierwsza jest (zawsze) nie lepsza od drugiej</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze) gorsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* oczywiœcie mog¹ byæ sobie równe (dla
algorytmu np. return null...; tu i tu O(1)), co do drugiego: jest tutaj ma³y
problem, ja bym raczej tak zaznaczy³</span><span style='font-size:8.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>32.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ pesymistyczn¹
pamiêciow¹ z oczekiwan¹ pamiêciow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze) gorsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pierwsza jest (zawsze) nie lepsza od
drugiej</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
mo¿e byæ lepsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* mo¿e byæ co najwy¿ej równa</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>33.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ
pesymistyczn¹ obliczeniow¹ z oczekiwan¹ pamiêciow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze) gorsza od drugiej<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pierwsza jest (zawsze) nie lepsza od
drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mog¹ byæ sobie równe</span><span
style='font-size:10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>34.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ
pesymistyczn¹ obliczeniow¹ z optymistyczn¹ obliczeniow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
mo¿e byæ lepsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze)gorsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mog¹ byæ sobie równe<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pierwsza jest (zawsze) nie lepsza od
drugiej</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* mo¿e byæ co najwy¿ej równa</span><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>35.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ
pesymistyczn¹ obliczeniow¹ z oczekiwan¹ obliczeniow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze)gorsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mog¹ byæ sobie równe</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='text-indent:18.0pt'><span style='font-size:10.0pt'>pierwsza
mo¿e byæ lepsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>36.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ oczekiwan¹
obliczeniow¹ z oczekiwan¹ pamiêciow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze) gorsza od drugiej<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze) nie lepsza od drugiej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mog¹ byæ sobie równe</span><span
style='font-size:10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>37.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Porównuj¹c
(dla danego algorytmu)<span style='mso-spacerun:yes'>  </span>z³o¿onoœæ oczekiwan¹
obliczeniow¹ z optymistyczn¹ pamiêciow¹:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mog¹ byæ sobie równe <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pierwsza jest (zawsze) nie lepsza od
drugiej</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwsza
jest (zawsze) gorsza od drugiej<b style='mso-bidi-font-weight:normal'><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>38.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Szybkiej transformaty
Fouriera u¿ywamy do:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>analizy i obróbki sygna³ów dŸwiêkowych</span><span
style='font-size:10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>znajdowania
najkrótszej œcie¿ki w grafie<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mno¿enia wielomianów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mno¿enia liczb</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>sortowania<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>39.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Jakie jest
najlepsze oszacowanie na z³o¿onoœæ problemu znajdowania najwiêkszego elementu w
<u>posortowanej </u>tablicy rozmiaru n:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(lgn)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(1)</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>w zale¿noœci czy rosn¹co czy malej¹co
posortowana jest tablica, element ten znajduje siê pod pierwszym lub ostatnim
indeksem<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
color:#FF6600'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>40.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Jakie jest
najlepsze oszacowanie na z³o¿onoœæ problemu znajdowania najwiêkszego elementu w
<u>danej tablicy</u> rozmiaru n:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(n)</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(lgn)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(1)<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>41.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mno¿enie
dwóch n-cyfrowych liczb da siê wykonaæ w czasie:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(nlogn)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(n<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(n<sup>log</sup><sub>2</sub><sup>3)</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*odpowiednio algorytmy: FFT, 'pod
kresk¹', Karatsuby</span><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>42.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Dla
posortowanej niemalej¹co tablicy A nastêpuj¹cy algorytm: <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>I=0;
p=n-1; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>while(I&lt;p){<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>s=(I+p+1)/2; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>if(x&lt;A[s])
<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>p=s-1;
<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>else
I=s;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>}<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><span
style='mso-spacerun:yes'> </span>return I:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>oblicza indeks ostatniego wyst¹pienia
najwiêkszej liczby nieprzekraczaj¹cej x</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>oblicza
indeks ostatniego wyst¹pienia najmniejszej liczby nieprzekraczaj¹cej x<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>oblicza
indeks pierwszego wyst¹pienia najmniejszej liczby co najmniej równej x<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>oblicza
indeks ostatniego wyst¹pienia x w A<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>oblicza
indeks pierwszego wyst¹pienia x w A<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>oblicza
indeks pierwszego wyst¹pienia najwiêkszej liczby nieprzekraczaj¹cej x<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>zawsze dzia³a w czasie O(logn)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>mo¿e
siê zapêtliæ<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>43.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Algorytm
Karacuby s³u¿y do:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>analizy
i obróbki sygna³ów dŸwiêkowych <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>przechodzenia
grafu<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>znajdowania
najkrótszej œcie¿ki w grafie<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>sortowania<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mno¿enia wielomianów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mno¿enia liczb</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>44.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Stabilne s¹
algorytmy sortowania:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>Insertionsort</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Selectionsort<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>MergeSort</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>HeapSort<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>QuickSort<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>45.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Spoœród nastêpuj¹cych
rzêdów z³o¿onoœci minimalne s¹:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(2<sup>log n</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(n
log n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(ln 2<sup>n</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* O(2<sup>logn</sup>) = O(n) &lt;
O(nlogn)<br>
O(ln2<sup>n</sup>) = O(nln2) = O(n) &lt; O(nlogn)</span><span style='font-size:
7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>46.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Spoœród
nastêpuj¹cych rzêdów z³o¿onoœci minimalne s¹:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(ln 2<sup>n</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>O(log<sub>10</sub>2<sup>n</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>O(nlogn)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* O(ln2<sup>n</sup>) = O(nln2) = O(n)
&lt; O(nlogn) <br>
O(log<sub>10</sub>2<sup>n</sup>) = O(nlog<sub>10</sub>2) = O(n) &lt; O(nlogn)</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>47.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Algorytm
Bluma-Floyda-Pratta-Rivesta-Tarjana znajdowania k-tego co do wielkoœci elementu
w n-elementowym zbiorze zaczyna siê od podzia³u na m-elementowe podzbiory dla
m=5. Gdyby analogicznie pomys³ wykorzystaæ dla innej, ale ustalonej z góry
licznoœci m, to liniow¹ z³o¿onoœæ pesymistyczn¹ uzyskalibyœmy dla:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>m=3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>m=n/5<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>m=7</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>m=&#8730;(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>* algorytm 'magicznych pi¹tek' rzeczywiœcie dzia³a najlepiej dla
m=5, jednak dla sta³ych m nie bêd¹cych 'dostatecznie bliskimi n' i nie
mniejszymi od 5 wci¹¿ dzia³a liniowo<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>48.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Je¿eli
pewien<span style='mso-spacerun:yes'>  </span>algorytm dzia³a w pesymistycznym
czasie O(n) dla danych wielkoœci n, to bêdzie dzia³a³ w pesymistycznym czasie
O(n) równie¿ dla danych wielkoœci:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>n+1<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2n<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2n + 2<sup>ln n</sup><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>logn</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>nlogn<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2n + 2<sup>ln n</sup></span><sup><span
style='font-size:10.0pt'><o:p></o:p></span></sup></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>n<sup>2<o:p></o:p></sup></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>49.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Je¿eli
pewien<span style='mso-spacerun:yes'>  </span>algorytm dzia³a w pesymistycznym
czasie O(nlogn) dla danych wielkoœci n, to bêdzie dzia³a³ w pesymistycznym
czasie O(nlogn) równie¿ dla danych wielkoœci:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>n+1<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>2n + 2<sup>ln n</sup></span><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>nlogn<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2n</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>n<sup>2<o:p></o:p></sup></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>logn</span><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>50.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Je¿eli
pewien algorytm dzia³a w pesymistycznym czasie O(logn) dla danych wielkoœci n,
to bêdzie dzia³a³ w pesymistycznym czasie O(logn) równie¿ dla danych wielkoœci:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2n<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>logn</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>n<sup>2</sup></span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>51.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
graf pe³ny z wagami G=(V,E), gdzie |V| =n, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>rozmiar tablicy list incydencji grafu G
jest rzêdu &#920;(n<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>rozmiar macierzy s¹siedztwa grafu G jest
rzêdu &#920;(n<sup>2</sup>)</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>rozmiar
macierzy s¹siedztwa grafu G jest rzêdu &#920;(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>rozmiar tablicy list incydencji grafu G
jest rzêdu &#937;(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>rozmiar macierzy s¹siedztwa grafu G jest
rzêdu &#937;(n)</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>52.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my algorytm
sortowania przez zliczenie CS zastosowany do sortowania n-elementowego ci¹gu
binarnego X, wtedy:<span style='mso-spacerun:yes'>    </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>w
tym przypadku rezultatem dzia³ania algorytmu CS bêdzie ci¹g binarny
uporz¹dkowany nierosn¹co<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>S(CS(X),n)= </span><span
style='font-size:10.0pt'>&#920;</span><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'>(n<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>T(CS(X),n,m)=&#338;(n+m), gdzie m jest
sta³¹ nie wiêksz¹ ni¿ 4</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>A(CS(X),n)&#8800;W(CS(X),n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>S(CS(X),n)= </span><span style='font-size:10.0pt;background:aqua;
mso-highlight:aqua'>&#920;</span><span lang=EN-US style='font-size:10.0pt;
background:aqua;mso-highlight:aqua;mso-ansi-language:EN-US'>(n)</span><span
lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad1: sortujemy rosn¹co raczej;),
ad2: S(CS(X),n)=O(n+m), a m=2, wiêc tutaj z³o¿onoœæ pamiêciowa to O(n), ad3:
poniewa¿ T(CS(X),n,m)=&#920;(n+m), wiêc czy tam jest theta, czy omega, czy du¿e
o - nie robi róznicy, ad4: countSort chyba nie mia³ gorszych i lepszych dni
(nie sortuje przez porównania)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>53.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm sortowania przez wstawianie IS, z binarnym wyszukiwaniem pozycji dla
wstawianego elementu,<span style='mso-spacerun:yes'>  </span>zastosowany do
danych wejœciowych rozmiaru n, wtedy:</span></b><span style='color:red'> <span
style='mso-spacerun:yes'> </span></span><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>W(IS,n)=O(n×lg(n)), je¿eli operacj¹
dominuj¹c¹ jest przestawianie danych<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>W(IS,n)=&#937;(A(IS,n)), je¿eli operacj¹
dominuj¹c¹ jest porównywanie danych<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>W(IS,n)= &#920; (A(IS,n)), je¿eli operacj¹
dominuj¹c¹ jest przestawianie danych</span><span style='font-size:10.0pt'> <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>W(IS,n)=
&#920;(n<sup>2</sup>), je¿eli operacj¹ dominuj¹c¹ jest przestawianie danych<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>W(IS,n)=O(n×lg(n)),
je¿eli operacj¹ dominuj¹c¹ jest porównywanie danych<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>54.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my zastosowanie
algorytmu sortowania przez scalanie MS do uporz¹dkowanych nierosn¹co danych
wejœciowych X rozmiaru n, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>T(MS(X),n)= &#920;</span><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>(lg(n!))</span><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:
EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>w
tym przypadku wysokoœæ drzewa wywo³añ rekurencyjnych algorytmu MS bêdzie nie
mniejsza ni¿ n<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>T(MS(X),n)=
O</span><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>55.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm HeapSort zastosowany do sortowania n-elementowego ci¹gu wejœciowego
zapisanego w tablicy X, wtedy: <o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>W(HeapSort(X),n)=O(n),
je¿eli operacj¹ dominuj¹c¹ jest czynnoœæ przedstawiania elementów tablicy<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>algorytm HeapSort sortuje dane wejœciowe w
miejscu</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>w
drzewie decyzyjnego algorytmu HeapSort zastosowanego do rozwa¿anych danych mo¿e
istnieæ œcie¿ka korzeñ-liœæ, której d³ugoœæ jest rzêdu O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>S(HeapSort(X),n)=O(1)</span><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad1: na oko jest to O(n<sup>2</sup>),
ad2: wersja z <u>dan¹</u> tablic¹ sortuje ju¿ na niej; nie potrzebujemy
dodatkowej; ad3: wtf is decyzyjny alg. heapsort? w ka¿dym razie drzewka
decyzyjne lubi¹ byæ pe³nymi drzewami binarnymi wysokoœci co najmniej lg(n!),
ad4: to znaczy, ¿e sortuje w miejscu</span><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>56.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech Alg
bêdzie optymalnym algorytmem dla problemu wyszukania pewnego
elementu(zak³adamy, ¿e takowy istnieje) w n-elementowym nieuporz¹dkowanym
uniwersum, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>A(Alg,
n)= &#937;(nxlg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>W(Alg,
n)=O(n<sup>1/2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>A(Alg, n)=O(W(Alg,n))</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal><span style='font-size:9.0pt;mso-bidi-font-size:12.0pt;
color:#FF6600'>* ¿eby znaleŸæ jakikolwiek element musimy wykonaæ co najwy¿ej
O(n) porównañ, œrednio n/2</span><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>57.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
graf pe³ny G=(V,E), gdzie V=a,b,c,d,e,f,g wtedy: <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>koszt algorytmu BFS dla rozwa¿anego grafu G
jest rzêdu O(|V|+|E|)</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>kolejnoœæ
odwiedzania wierzcho³ków grafu G z wierzcho³ka startowego d przez algorytm BFS
jest nastêpuj¹ca: d,c,e,b,f,a,g, je¿eli wierzcho³ki wybieramy w porz¹dku
odwrotnym do alfabetycznego<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>kolejnoœæ odwiedzania wierzcho³ków grafu G
z wierzcho³ka startowego d przez algorytm BFS jest nastêpuj¹ca: d,g,f,e,c,b,a,
je¿eli wierzcho³ki wybieramy w porz¹dku odwrotnym do alfabetycznego</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>kolejnoœæ
odwiedzania wierzcho³ków grafu G z wierzcho³ka startowego d przez algorytm BFS
jest nastêpuj¹ca: d,a,b,c,e,f,g, <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>je¿eli
wierzcho³ki wybieramy w porz¹dku alfabetycznym <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>koszt
algorytmu BFS dla rozwa¿anego grafu G jest rzêdu &#920;(|V|)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>koszt
algorytmu DFS dla rozwa¿anego grafu G jest rzêdu O(|V|)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>kolejnoœæ
odwiedzania wierzcho³ków grafu G z wierzcho³ka startowego d przez algorytm DFS
jest nastêpuj¹ca: d,a,g,b,f,c,e je¿eli wierzcho³ki wybieramy w porz¹dku
alfabetycznym<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>kolejnoœæ odwiedzania wierzcho³ków grafu G
z wierzcho³ka startowego d przez algorytm DFS jest nastêpuj¹ca: d,a,b,c,e,f,g
je¿eli wierzcho³ki wybieramy w porz¹dku alfabetycznym</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad1: bfs ma taki koszt dla ka¿dego
grafu<br>
ad3: bfs(breadth-first-search), czyli algorytm przeszukiwania wszerz szuka
'p³ytko' - poziomami. Poniewa¿ jest to graf pe³ny, to z wierzcho³ka d po prostu
po kolei odwiedzi wszystkie wierzcho³ki w kolejnoœci odwrotnej do alfabetycznej<br>
ad5/6: koszt dfs i bfs to &#920;(|V|+|E|)<br>
ad7: dfs(depth-first-search), czyli algorytm przeszukiwania wg³¹b szuka
'g³êboko' (generalnie znajdzie najd³u¿sz¹ drog¹ od wierzcho³ka pocz¹tkowego).
Poniewa¿ graf jest pe³ny to znajdzie najd³u¿sz¹ drogê - sk³adaj¹ca siê ze
wszystkich wierzcho³ków odwiedzanych zgodnie z kolejnoœci¹ alfabetyczn¹</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>58.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
graf <span style='mso-spacerun:yes'> </span>G=(V,E), gdzie |V|=n i n&gt;10, w
którym algorytmy DFS oraz BFS generuj¹ ten sam ci¹g etykiet odwiedzanych
wierzcho³ków z pewnego wierzcho³ka Ÿród³owego, wtedy graf G mo¿e byæ:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>grafem-drzewem
binarnym wysokoœci &#920;(lg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>grafem pustym<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>grafem-gwiazd¹, tj. grafem spójnym takim,
¿e ka¿dy wierzcho³ek tego grafu ma rz¹d równy 1 za wyj¹tkiem wierzcho³ka centralnego,
którego rz¹d jest równy n-1<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>grafem-drzewem binarnym wysokoœci n-1</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* w przypadku grafu pustego DFS i BFS
dadz¹ w wyniku listê pust¹, grafu-drzewa wysokoœci n-1 (czyli de facto listy)
wypisz¹ po kolei elementy listy, w przypadku gwiazdy jest to prawdziwe, jeœli
zaczynamy od wierzcho³ka centralnego</span><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><span
style='mso-tab-count:1'>        </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>59.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech H
bêdzie kopcem-drzewem typu min powsta³ym przez kolejne wstawianie wierzcho³ków
o etykietach 8,2,4,7,6,1,3,0,5 do pocz¹tkowo pustej struktury, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wierzcho³ki kopca-drzewa H wypisane w
kolejnoœci PreOrder tworz¹ ci¹g: 0,1,5,8,6,7,2,4,3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wierzcho³ki kopca-drzewa H wypisane w
kolejnoœci InOrder tworz¹ ci¹g: 8,5,6,1,7,0,4,2,3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ kopca-drzewa H jest rzêdu lg(n),
gdzie n jest liczb¹ wierzcho³ków rozwa¿anego drzewa<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ kopca-drzewa H jest równa 3<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>je¿eli w kopcu-drzewie H wykonamy operacjê
delmin, to etykiety kopca-drzewa bêd¹cego rezultatem rozwa¿anej operacji
sczytane w kolejnoœci InOrder tworz¹ ci¹g 1,2,3,4,5,6,7,8</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>je¿eli w kopcu-drzewie H wykonamy operacjê
delmin, to etykiety kopca-drzewa bêd¹cego rezultatem rozwa¿anej operacji
sczytane w kolejnoœci PostOrder tworz¹ ci¹g 8,6,7,5,4,3,2,1<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>liczba liœci na ostatnim poziomie
kopca-drzewa H jest równa 2</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>je¿eli
w kopcu-drzewie H wykonamy operacjê delmin, to etykiety kopca-drzewa bêd¹cego
rezultatem rozwa¿anej operacji sczytane w kolejnoœci PreOrder tworz¹
1,2,5,6,7,4,3,8<span style='background:aqua;mso-highlight:aqua'><o:p></o:p></span></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ kopca-drzewa H jest niezale¿na od
kolejnoœci wstawiania rozwa¿anych wierzcho³ków</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*by s5578: (nie biorê za to
najmniejszej odpowiedzialnoœci;)<br>
Ad3.Wysokoœæ wêz³a definiujemy jako liczbê krawêdzi na najd³u¿szej prostej
œcie¿ce prowadz¹cej od tego wêz³a do liœcia, wysokoœæ drzewa jest wiêc
wysokoœci¹ korzenia. Jak ³atwo zauwa¿yc, wysokoœæ kopca zawieraj¹cego n wêz³ów
(wierzcho³ków) wynosi (lg n)<br>
Ad5.kolejnoœæ inOrder 86571423<br>
Ad8.kolejnoœæ preOrder 15687243<br>
<br>
by s5413:<br>
// z liczenia i rysowania, nie gwarantuje poprawnoœci<br>
+ a) wierzcho³ki kopca-drzewa H wypisane w kolejnoœci PreOrder tworz¹ ci¹g:
0,1,5,8,6,7,2,4,3<br>
+ b) wierzcho³ki kopca-drzewa H wypisane w kolejnoœci InOrder tworz¹ ci¹g:
8,5,6,1,7,0,4,2,3 // wbrew pozorom, to nie jest BST, wiêc nie da ci¹gu
posortowanego<br>
+ c) wysokoœæ kopca-drzewa H jest rzêdu lg(n), gdzie n jest liczb¹ wierzcho³ków
rozwa¿anego drzewa<br>
- d) wysokoœæ kopca-drzewa H jest równa 3 // 4 jakby liczyæ korzeñ <br>
+ e) je¿eli w kopcu-drzewie H wykonamy operacjê delmin, to etykiety
kopca-drzewa bêd¹cego rezultatem rozwa¿anej operacji sczytane w kolejnoœci
InOrder tworz¹ ci¹g 1,2,3,4,5,6,7,8<br>
+ f) je¿eli w kopcu-drzewie H wykonamy operacjê delmin, to etykiety kopca-drzewa
bêd¹cego rezultatem rozwa¿anej operacji sczytane w kolejnoœci PostOrder tworz¹
ci¹g 8,6,7,5,4,3,2,1<br>
+ g) liczba liœci na ostatnim poziomie kopca-drzewa H jest równa 2<br>
- h) je¿eli w kopcu-drzewie H wykonamy operacjê delmin, to etykiety
kopca-drzewa bêd¹cego rezultatem rozwa¿anej operacji sczytane w kolejnoœci
PreOrder tworz¹ 1,2,5,6,7,4,3,8<br>
+ i) wysokoœæ kopca-drzewa H jest niezale¿na od kolejnoœci wstawiania rozwa¿anych
wierzcho³ków</span><span style='font-size:4.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>60.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech D
bêdzie drzewem decyzyjnym dla pewnego algorytmu sortowania przez porównania
zastosowanego do danych wejœciowych rozmiaru n, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>liczba
liœci w drzewie D jest co najwy¿ej rzêdu n<sup>2</sup><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>liczba liœci w drzewie D jest co najmniej
rzêdu n<sup>n</sup></span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wysokoœæ
drzewa D jest rzêdu co najwy¿ej lg(n!)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ drzewa D jest rzêdu co najmniej
lg(n!)</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>61.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech T
bêdzie drzewem BST powsta³ym przez <span style='color:red'>losowe</span>
wstawianie wierzcho³ków o etykietach 8,2,4,7,6,1,3,0,5 do pocz¹tkowo pustej
struktury, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wierzcho³ki
drzewa T wypisane w kolejnoœci InOrder tworz¹ ci¹g nierosn¹cy<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wierzcho³ki drzewa T wypisane w kolejnoœci
InOrder mog¹ odpowiadaæ ci¹gowi wierzcho³ków w kolejnoœci PostOrder</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wysokoœæ
drzewa T jest równa co najwy¿ej 5<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ drzewa T jest zale¿na od
kolejnoœci wstawiania rozwa¿anych wierzcho³ków i w przypadku pesymistycznym
mo¿e byæ równa 8<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ drzewa T jest równa co najmniej
lg(n), gdzie n jest liczb¹ wierzcho³ków rozwa¿anego drzewa</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad2 dla drzewa listy bez prawego
poddrzewa, ad4 jeœli drzewo jest list¹, ad5 wysokoœc drzewa idealnie
zbalansowanego wynosi lg(n), wiêc ka¿de drzewo musi byæ co najmniej tej
wysokoœci</span><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>62.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech T
bêdzie drzewem BST powsta³ym przez <span style='color:red'>kolejne</span>
wstawianie wierzcho³ków o etykietach 8,2,4,7,6,1,3,0,5 do pocz¹tkowo pustej struktury,
wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wysokoœæ
drzewa T jest równa co najwy¿ej lg(n), gdzie n jest liczb¹ wierzcho³ków
rozwa¿anego drzewa<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wierzcho³ki
drzewa T wypisane w kolejnoœci InOrder tworz¹ ci¹g 8,0,1,2,3,4,7,5,6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>usuniêcie wierzcho³ka z etykiet¹ 8 w
drzewie T prowadzi do drzewa, którego korzeniem bêdzie wierzcho³ek z etykiet¹ 2</span><span
style='font-size:10.0pt'> <span style='background:aqua;mso-highlight:aqua'>usuniêcie
wierzcho³ka z etykiet¹ 2 w drzewie T prowadzi do drzewa, w którym w miejscu
wierzcho³ka z etykiet¹ 2 znajdzie siê wierzcho³ek z etykiet¹ 1 lub 3</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>usuniêcie
wierzcho³ka z etykiet¹ 2 w drzewie T prowadzi do drzewa, w którym w miejscu
wierzcho³ka z etykiet¹ 2 znajdzie siê wierzcho³ek z etykiet¹ 4<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>63.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Za³ó¿my, ¿e
kolejka Q zawiera n elementów i ¿e wykonujemy jedynie operacje zdefiniowane w
strukturze kolejek, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wyciêcie
z kolejki Q elementu znajduj¹cego siê w odleg³oœci n/4 wzglêdem pocz¹tku
kolejki wymaga wczeœniejszego wyjêcia z kolejki 3n/4±1 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wyciêcie
z kolejki Q elementu znajduj¹cego siê w odleg³oœci n wzglêdem koñca kolejki
wymaga wczeœniejszego wyjêcia z kolejki n±1 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wyciêcie z kolejki Q elementu znajduj¹cego
siê w odleg³oœci n/4 wzglêdem pocz¹tku kolejki wymaga wczeœniejszego wyjêcia z
kolejki n/4±1 elementów</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wyciêcie
z kolejki Q elementu znajduj¹cego siê w odleg³oœci 1 wzglêdem pocz¹tku kolejki
wymaga wczeœniejszego wyjêcia z kolejki n±1 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>u¿ywaj¹c tylko co najwy¿ej dwóch kolejek
pomocniczych Q1 oraz Q2 i operacji kolejkowych mo¿na odwróciæ kolejnoœæ
elementów<span style='mso-spacerun:yes'>  </span>w kolejce Q</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>64.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Za³ó¿my, ¿e stos
S zawiera n elementów i ¿e wykonujemy jedynie operacje zdefiniowane w
strukturze stosów, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>zdjêcie ze stosu S elementu znajduj¹cego
siê na wysokoœci n/4 wzglêdem góry stosu wymaga wczeœniejszego zdjêcia ze stosu
n/4±1 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>zdjêcie ze stosu S elementu znajduj¹cego
siê na wysokoœci n wzglêdem góry stosu wymaga wczeœniejszego zdjêcia ze stosu
n±1 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>u¿ywaj¹c tylko co najwy¿ej dwóch stosów
pomocniczych S1 i S2 i operacji stosowanych mo¿na odwróciæ kolejnoœæ elementów
na stosie S</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>zdjêcie
ze stosu S elementu znajduj¹cego siê na wysokoœci 1 wzglêdem góry stosu wymaga
wczeœniejszego zdjêcia ze stosu n±1 elementów<span style='mso-spacerun:yes'> 
</span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>65.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Nazwa
struktury danych AVL i zwi¹zany z ni¹ algorytm pochodzi od:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwszych
liter nazwisk trzech twórców tej metody<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pierwszych
liter angielskiego skrótu opisuj¹cego najwa¿niejsz¹ cechê tej struktury <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>nazwy
uniwersyteckiej ligi siatkówki, której pasjonatami byli jej twórcy<b
style='mso-bidi-font-weight:normal'><span style='mso-tab-count:1'>         </span><o:p></o:p></b></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* avl pochodzi od liter nazwisk <u>dwóch</u>
twórców (Adelson-Velsky i Landis). Jeden z ¿artów dr Chrz¹stowskiego to w³aœnie
'trzech twórców AVL: Adelson, Velsky i Landis';), co ciekawe p. Rembelski w
wyk³adach ma 3 twórców ;)</span><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>66.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech T
bêdzie drzewem AVL powsta³ym przez kolejne wstawianie wierzcho³ków o etykietach
8,2,4,7,6,1,3,0,5 do pocz¹tkowo pustej struktury, wtedy:<span
style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wysokoœæ
drzewa jest równa 4<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>w
trakcie budowy drzewa wykonamy co najmniej dwie podwójne rotacje<o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt;background:aqua;mso-highlight:aqua'>w trakcie budowy
drzewa T wykonamy dwie podwójne i jedn¹ pojedyncz¹ rotacjê <o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt'><span
style='font-size:10.0pt;background:aqua;mso-highlight:aqua'>wysokoœæ drzewa
jest niezale¿na od kolejnoœci wstawiania rozwa¿anych wierzcho³ków</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'>wierzcho³ki drzewa <!--[if gte vml 1]><v:shape id="_x0000_i1025"
 type="#_x0000_t75" style='width:.75pt;height:.75pt' filled="t">
 <v:fill color2="black"/>
 <v:textbox inset="0,0,0,0"/>
</v:shape><![endif]--><![if !vml]><img width=1 height=1
src="asd_test_2009_files/image031.gif" v:shapes="_x0000_i1025"><![endif]>wypisane
w kolejnoœci PreOrder tworz¹ ci¹g 3,4,2,1,0,7,6,5,8</span><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt'>wierzcho³ki drzewa <!--[if gte vml 1]><v:shape id="_x0000_i1026"
 type="#_x0000_t75" style='width:.75pt;height:.75pt' filled="t">
 <v:fill color2="black"/>
 <v:textbox inset="0,0,0,0"/>
</v:shape><![endif]--><![if !vml]><img width=1 height=1
src="asd_test_2009_files/image031.gif" v:shapes="_x0000_i1026"><![endif]>wypisane
w kolejnoœci PostOrder tworz¹ ci¹g 0,1,3,2,5,6,8,7,4</span><span
style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
mso-bidi-font-size:12.0pt;background:aqua;mso-highlight:aqua'>wierzcho³ki
drzewa <!--[if gte vml 1]><v:shape id="_x0000_i1027" type="#_x0000_t75"
 style='width:.75pt;height:.75pt' filled="t">
 <v:fill color2="black"/>
 <v:textbox inset="0,0,0,0"/>
</v:shape><![endif]--><![if !vml]><img width=1 height=1
src="asd_test_2009_files/image031.gif" v:shapes="_x0000_i1027"><![endif]>wypisane
w kolejnoœci InOrder tworz¹ ci¹g 0,1,2,3,4,5,6,7,8</span><b style='mso-bidi-font-weight:
normal'><span style='font-size:8.0pt;mso-bidi-font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><span
style='mso-spacerun:yes'> </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>wysokoœæ drzewa jest równa 3.<br>
Kolejnoœæ PreOrder 421036578<br>
Kolejnoœæ PostOrder 013258764<br>
Kolejnoœæ InOrder 012345678</span><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>67.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Kopiec
n-elementowy mo¿na: <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>przekszta³ciæ
w kopiec odwrotny(z najmniejszym, a nie najwiêkszym elementem w ka¿dym
korzeniu) w czasie O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>rozebraæ
w czasie O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>utworzyæ w czasie O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>scaliæ z innym kopcem n-elementowym (czyli
utworzyæ nowy kopiec z tych dwóch) w czasie O(n)</span><span style='font-size:
10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*ad1/2 przekszta³cenie w kopiec
odwrotny wymusza rozebranie kopca. Czy da siê to zrobiæ liniowo? Generalnie
patrz¹c na operacje dozwolone na kopcu, to musimy po prostu rozebraæ go jak
przy heapSorcie, jednak¿e mo¿na to te¿ zrobiæ jakimœ algorytmem dobieraj¹cym
siê do wierzcho³ków metod¹ bottom-up (czyli np. postOrder) i po kolei dodawaæ
wierzcho³ki do nowoutworzonego kopca typu max (co jest liniowe) tworz¹c go
liniowo heapConstructem. Jak jest w kluczu? Mo¿e ktoœ wie?:)<br>
ad3: heapConstruct<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>68.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Które z
poni¿szych zdañ jest zawsze prawdziwe w strukturze kolejek priorytetowych typu
min: <o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>empty(pq)&#8594;empty(delmin(insert(insert(pq,e),e)))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>min(pq)=min(insert(delmin(pq),min(pq)))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>min(pq)=min(insert(pq,e))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>empty(pq)&#8594;empty(delmin(insert(pq,e),e))</span><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*ad1: kolejka priorytetowa w
standardowej wersji ma cechy multizbioru (elementy mog¹ siê powtarzaæ), wiêc po
dwukrotnym wstawieniu i jednokrotnym usuniêciu zostaje jeszcze jeden element<br>
ad2: wg p. Rembelskiego - czemu? nie wiem... Mo¿e dlatego, ¿e nie chodzi o
wartoœæ minimaln¹, a element minimalny. O ile wartoœci minimalne s¹ te same, to
elementy ró¿ne...<br>
ad3: e mo¿e byæ nowym elementem minimalnym</span><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>69.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Które z
poni¿szych zdañ jest zawsze prawdziwe w strukturze kolejek:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>¬empty(q) &#8594; empty(out(q))=true<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>¬empty(q) &#8594;first(q)&#8800;first(in(out(q),e))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>out(in(in(q,e),e))=in(out(in(q,e)),e)</span><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:35.4pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>70.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech X=[0,3,2,4,3,3,2,0,0]
bêdzie tablic¹ danych wejœciowych dla algorytmu sortowania przez zliczenie CS,
wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>stan
tablicy pomocniczej, w której odbywa siê zliczanie, po zakoñczeniu
sumowania(tj. tu¿ po 3-ciej pêtli iteracyjnej algorytmu CS) jest nastêpuj¹cy
[3,3,5,7,9]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>stan
tablicy pomocniczej, w której odbywa siê zliczanie, po zakoñczeniu
sumowania(tj. tu¿ po 3-ciej pêtli iteracyjnej algorytmu CS) jest nastêpuj¹cy [2,3,5,8,9]<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>rozmiar tablicy pomocniczej niezbêdnej do
realizacji czynnoœci zliczania w algorytmie CS jest nie mniejszy ni¿ 5</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>stan tablicy pomocniczej, w której odbywa
siê zliczanie, po zakoñczeniu sumowania(tj. tu¿ po 2-giej pêtli iteracyjnej
algorytmu CS) jest nastêpuj¹cy [3,0,2,3,1]</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*tablica pomocnicza po zakoñczeniu
sumowania wygl¹da tak [3,3,5,8,9]</span><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>71.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Które z
poni¿szych zdañ jest prawdziwe:</span></b><span style='color:red'> NIEopracowane</span><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>istnieje
algorytm, który z zadanego n-wierzcho³kowego kopca-drzewa konstruuje drzewo BST
w czasie O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>istnieje
algorytm, który konstruuje kopiec-drzewo z losowego ci¹gu n elementów
wejœciowych w czasie O(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>istnieje
algorytm, który z zadanego n-wierzcho³kowego drzewa AVL konstruuje
kopiec-drzewo w czasie O(n<sup>1/2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>istnieje
algorytm, który konstruuje kopiec-drzewo z losowego ci¹gu n elementów
wejœciowych w czasie O(lg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>istnieje
algorytm, który z zadanego n-wierzcho³kowego kopca-drzewa konstruuje drzewo AVL
w czasie O(n× lg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>72.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm Alg i korzeñ drzewa binarnego root, gdzie Alg(root)=<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>if(root==NULL)<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>return
0 <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>else
if(root.left==NULL AND root.right==NULL) <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>return
1 <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>else
return Alg(root.left) + Alg(root.right) +1<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>}, <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>rezultatem
wywo³ania algorytmu Alg dla drzewa binarnego o korzeniu root jest liczba
wierzcho³ków zewnêtrznych tego drzewa<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>rezultatem wywo³ania algorytmu Alg dla
drzewa binarnego o korzeniu root jest liczba wierzcho³ków tego drzewa</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>rezultatem
wywo³ania algorytmu Alg dla drzewa binarnego o korzeniu root jest liczba
wierzcho³ków wewnêtrzn. tego drzewa<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>S(Alg, root)=&#920;(n), gdzie n jest liczb¹
wierzcho³ków drzewa o korzeniu root i uwzglêdniamy stos wywo³añ rekurencyjnych</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>rezultatem
wywo³ania algorytmu Alg dla drzewa binarnego o korzeniu root jest wysokoœæ tego
drzewa<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>73.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm Alg(n)=<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:17.4pt'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'>int k=1, x=1;<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:17.4pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>while(k&lt;n)
do <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:17.4pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>k=k+1; <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:17.4pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>x=x*k <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:17.4pt'><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>od<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>}. <o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>Która z wymienionych poni¿ej formu³ jest
niezmiennikiem pêtli iteracyjnej w algorytmie Alg?<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>x=1+2+3+…+(k-1)+k<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>x=x*k
i k &#8804;x<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>x=k!<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>x=k! i x&#8805;k</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>x=k!
i s&#8805;k<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>k
&#8804;n<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* jeœli mamy zaznaczyæ tylko jedno<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>74.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm Alg(n)=<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>int s=0, k=1; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>while(k&lt;=n) do <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>s=k*k; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>k=k+1 <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>od<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>}.<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>Które z poni¿szych zdañ jest prawdziwe:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>algorytm Alg zatrzymuje siê dla dowolnej
parzystej liczby naturalnej</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>algorytm
Alg jest ca³kowicie poprawny dla warunku pocz¹tkowego i koñcowego odpowiednio
WP=(n jest liczb¹ naturaln¹) oraz WK=(s=&#931;<sup>n</sup><sub>i=1 </sub>(i+k<sup>2</sup>))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>algorytm
Alg nie zatrzymuje siê dla dowolnej liczby naturalnej n&#8805;2<sup>10</sup><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>75.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm Alg(n)=<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>int s=0, k=1;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>while(k&lt;=n) do <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>s=s+k*k;<span style='mso-tab-count:1'>              </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>k=k+1 <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:35.4pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>od<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>}.<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>Które z poni¿szych zdañ jest prawdziwe:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Algorytm
Alg jest ca³kowicie poprawny dla warunku pocz¹tkowego i koñcowego odpowiednio
WP=(n jest liczb¹ naturaln¹) oraz WK=(s=&#931;<sup>n</sup><sub>i=1</sub>(i-1)<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Algorytm
Alg jest ca³kowicie poprawny dla warunku pocz¹tkowego i koñcowego odpowiednio
WP=(n jest liczb¹ naturaln¹) oraz WK=(s=&#931;<sup>n</sup><sub>i=1</sub>(i+k)<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>Algorytm Alg jest czêœciowo poprawny dla
warunku pocz¹tkowego i koñcowego odpowiednio WP=(n jest liczb¹ naturaln¹) oraz
WK=(s=&#931;<sup>n</sup><sub>i=1</sub> i<sup>2</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>76.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm Alg(n)=<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>if(n=
=0) <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>return
3 <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>else return Alg(n-1) + Alg(n-1) +
Alg(n-1))<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>},<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><span
style='mso-spacerun:yes'> </span>wtedy dla n naturalnego:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>S(Alg,
n)=&#920;(n), je¿eli uwzglêdnimy stos wywo³añ rekurencyjnych<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>S(Alg, n)=O(n), je¿eli nie uwzglêdnimy stos
wywo³añ rekurencyjnych</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>W(Alg,
n)&#8800; &#920;(A(Alg,n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Alg(n)=3<sup>n<o:p></o:p></sup></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>T(Alg, n)=&#937;(3<sup>n</sup>)</span><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><span style='mso-spacerun:yes'> </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>77.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozpatrujemy
ca³kowit¹ poprawnoœæ algorytmu, poprzez metodê niezmienników pêtli. Jesteœmy w
miejscu, tu¿ po zakoñczeniu pêtli. Wiemy, ¿e:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>zachodzi zaprzeczenie dozoru pêtli<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>zachodzi zaprzeczenie dozoru pêtli oraz
niezmiennik pêtli z ostatniej iteracji</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>zachodzi
dozór pêtli oraz niezmiennik pêtli z ostatniej iteracji<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>78.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Przy
haszowaniu otwartym z uporz¹dkowanymi listami wykonanie k operacji insert do
pustej n-elementowej tablicy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>pesymistycznie kosztuje O(k<sup>2</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>pesymistycznie
kosztuje O(n<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>œrednio kosztuje O(k<sup>2</sup>/n)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>ad1: jeœli haszujemy ca³y czas pod ten
sam adres<br>
ad2: pesymistycznie kosztuje O(k<sup>2</sup>), jednak nie da siê przeprowadziæ
poprawnie haszowania otwartego, jeœli nie mamy miejsca na wszystkie elementy,
wiêc skoro k&lt;=n, to O(n<sup>2</sup>) jest dobrym szacowaniem. Z drugiej
strony jeœli nie ma takiego ograniczenia, ani kontroli, to nie jest to dobre
ograniczenie<br>
ad3: iloœæ mo¿liwych kolizji na wolne miejsce --&gt; wygl¹da ok</span><b
style='mso-bidi-font-weight:normal'><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>79.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Przy za³o¿eniu,
¿e n&gt;<st1:metricconverter ProductID="0, a" w:st="on">0, a</st1:metricconverter>
przy tym n jest liczb¹ parzyst¹, zaœ k jest liczb¹ ca³kowit¹ nieparzyst¹, dla
pêtli <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>j=n; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>x=k; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>while(j!=0)<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>x+=j;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>j--;<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>}<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>poprawnym niezmiennikiem jest:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>parzystoœæ
zmiennych j oraz x s¹ zawsze ró¿ne<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>jeœli pêtla wykona³a co najmniej 4 obroty,
to parzystoœæ x oraz j s¹ takie same, jak cztery obroty pêtli wczeœniej</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>x&#8805;0<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>j<b style='mso-bidi-font-weight:normal'> </b>&#8805;0</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>80.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Sortowanie
radixsort pozwala posortowaæ n elementów szybciej ni¿ w czasie O(nlogn) m.in.
dziêki temu, ¿e:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='color:red'>NIEopracowane</span><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>reprezentacje
elementów z sortowanego zbioru maj¹ okreœlon¹ i sta³¹ ze wzglêdu na n d³ugoœæ
liczon¹ w bitach<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>algorytm
countsort jest stabilny<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>nie
wykonujemy bezpoœrednich operacji na elementach, tylko odwo³ujemy siê do ich
reprezentacji bitowej<o:p></o:p></span></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-spacerun:yes'> </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>81.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Aby otrzymaæ
B-drzewo o wysokoœci 2 dla t=5<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wstawiæ
co najwy¿ej 1000 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>doprowadziæ do sytuacji, w której ³¹cznie
bêdzie co najmniej 9 wêz³ów</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>ustaliæ
jego stopieñ na co najmniej 5<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>nale¿y
po zainicjalizowaniu pustego drzewa wstawiæ co najmniej 25 elementów<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:7.0pt;
mso-bidi-font-size:10.0pt;color:#FF6600'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* by s5002:<br>
ad1: nie jestem na 100% pewna, ale raczej nie - ka¿dy wêze³ mo¿e mieæ do 5
synów i w ka¿dym wêŸle jest najwy¿ej po 4 elementy, wiêc bêdzie 4 + 5*(4) +
5*5*(4) = <st1:metricconverter ProductID="124, a" w:st="on">124, a</st1:metricconverter>
powy¿ej tego drzewo bêdzie mia³o ju¿ wysokoœæ 3<br>
ad2: na 100% tak (Chrz¹stowski to ze mn¹ omawia³, zreszt¹ mo¿na to sprawdziæ na
tym applecie dotycz¹cym drzew)<br>
ad3: nie (przynajmniej w kluczu tego nie by³o, bo nie wiem, co oznacza stopieñ
drzewa)<br>
ad4: na 100% tak (wystarczy 17 elem. - sprawdzi³am na applecie)<br>
<br>
ode mnie:<br>
zgodnie z Cormenem (wg. którego dr Chrz¹stowski wyk³ada³ B-drzewa) wysokoœæ h
&#8804; log<sub>t</sub>((n+1)/2), gdzie t to minimalny stopieñ B-drzewa (czyli
ka¿dy wêze³ poza korzeniem musi mieæ co najmniej t-1 i nie wiêcej ni¿ 2t-1
kluczy)<br>
ad1: po wstawieniu jednej liczby drzewo jest wysokoœci 0, wiêc to kiepskie
oszacowanie<br>
ad3: stopieñ grafu to maksimum po stopniach wierzcho³ków danego grafu<br>
ad4: jeœli mo¿emy otrzymaæ drzewo wysokoœci 2 po wstawieniu 17 elementów, to
chyba nie to samo co po 25. W ka¿dym razie co najmniej 25 to te¿ 2000, co
raczej nie da drzewa wysokoœci dok³adnie 2 wiêc odznaczam to:)</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>82.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
drzewo T typu AVL powsta³e przez losowe wstawianie wierzcho³ków o etykietach
1,2,3,…., n-1,n do pocz¹tkowo pustej struktury, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>w drzewie T mo¿e istnieæ œcie¿ka
korzeñ-liœæ, której d³ugoœæ jest rzêdu O(n<sup>1/2</sup>)<b style='mso-bidi-font-weight:
normal'><br>
</b>wysokoœæ drzewa T jest nie wiêksza ni¿ c×n, gdzie c jest pewn¹ sta³¹<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>w
drzewie T mo¿e istnieæ œcie¿ka korzeñ-liœæ, której d³ugoœæ jest rzêdu lg(lg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>usuniêcie pewnego wierzcho³ka z drzewa T
mo¿e wymagaæ wykonania co najwy¿ej jednej podwójnej rotacji<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>usuniêcie pewnego wierzcho³ka z drzewa T
mo¿e wymagaæ wykonania &#920;(lg(n)) rotacji<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wstawienie wierzcho³ka z etykiet¹ n+1 do
drzewa T wymaga wykonania co najwy¿ej jednej podwójnej rotacji<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wstawienie
wierzcho³ka z etykiet¹ n+1 do drzewa T wymaga &#920;(n) rotacji<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wysokoœæ drzewa T jest nie wiêksza ni¿
c×lg(n), gdzie c jest pewn¹ sta³¹</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad1: avl jest drzewem zrównowa¿onym,
wiêc wysokoœæ wynosi lgn+/-1, ale lgn &lt; n<sup>1/2</sup>, wiêc œcie¿ka
d³ugoœci lgn jest rzêdu O(n<sup>1/2</sup>)<br>
ad2: jw. c mo¿e byæ jedynk¹ bo lgn &lt; n<br>
ad3: jw. wysokoœc jest rzêdu &#920;(lgn)<br>
ad4: skoro jest tryb przypuszczaj¹cy, to czemu nie;) a tak na serio to
przypadków takich jest mnóstwo (np usuniêcie liœcia dla drzewa avl o 3
wierzcho³kach - nie trzeba nic zmieniaæ)<br>
ad5: O(lgn) jest pesymistycznym ograniczeniem z góry, wiêc w najbardziej
pesymistycznym przypadku,kiedy trzeba ca³e drzewo po kolei poziomami
równowa¿yæ, mo¿e to byæ &#920;(lg(n)) rotacji <br>
ad6/7: wstawienie do drzewa zawsze wymaga co najwy¿ej jedn¹ co najwy¿ej
podwójn¹ rotacjê<br>
ad8: jak 1/2/3, sta³a c = 1..2</span><b style='mso-bidi-font-weight:normal'><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>83.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Które z
poni¿szych zdañ jest zawsze prawdziwe w strukturze s³owników:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>&#9488;member(insert(delete(d,e),e),e)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>empty(d)&#8596;empty(delete(insert(insert(d,e),e),e))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>member(insert(delete(d,e),e),e)</span><span lang=EN-US style='font-size:
10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>&#9488;empty(d) &#8596;
empty(delete(insert(insert(d,e),e),e)) <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad2: nieprawdziwe, jeœli d sk³ada³o
siê wy³¹cznie z elementu e</span><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>84.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Które z
poni¿szych zdañ jest zawsze prawdziwe w strukturze stosów:<o:p></o:p></span></b></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:
EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>&#9488;empty(s)&#8594;top(s)&#8800;top(push(pop(s),e))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>empty(s)&#8594; &#9488;empty(pop(push(s,e))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>&#9488;empty(s)&#8594;top(pop(push(s,top(s))))=top(s)</span><span
lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad1: jeœli stos ma tylko element e,
to nastêpnik implikacji fa³szywy</span><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>85.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Mamy pewien
algorytm o z³o¿onoœci obliczeniowej O(n<sup>2</sup>), zmierzyliœmy czas
dzia³ania dla pewnych danych o du¿ej liczbie elementów, równej n i czas wyniós³
t.<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>Szacunkowo, algorytm w ci¹gu 4t, jest w
stanie przetworzyæ dane o wielkoœci 2n</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Szacunkowo,
algorytm w ci¹gu 16t, jest w stanie przetworzyæ dane o wielkoœci 8n<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>Szacunkowo, algorytm w ci¹gu 8t, jest w
stanie przetworzyæ dane o wielkoœci 2n</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>Szacunkowo,
algorytm dla danych wielkoœci 4n, bêdzie dzia³aæ 4t.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>Szacunkowo, algorytm w ci¹gu 64t, jest w
stanie przetworzyæ dane o wielkoœci 8n</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>86.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Dana jest
funkcja laszuj¹ca h(i)=i mod17 oraz rehaszuj¹ca r(i)=(i+3)mod17. Korzystaj¹c z
tych funkcji wprowadzamy do pocz¹tkowo pustej tablicy intA[16] kolejno
wartoœci: 6,0,20,13,3,17. Po wprowadzeniu tych liczb:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>trzy liczby znajduj¹ siê pod indeksami im
równymi<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>0 poprzedza wszystkie inne wprowadzone
wartoœci</span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>3
wystêpuje przed 6<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>17
znajdzie siê po wszystkich wprowadzonych wartoœciach<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* ad1: 0, 6 i 13</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>87.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Wyznaczenie
operacji(i) dominuj¹cej/ych jest potrzebne do okreœlenia:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>z³o¿onoœci optymistycznej pamiêciowej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>z³o¿onoœci oczekiwanej pamiêciowej<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>z³o¿onoœci oczekiwanej obliczeniowej</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
color:#FF6600'>* z³o¿onoœæ pamiêciowa <u>raczej</u> nie jest okreœlona przez
operacje dominuj¹ce. Wyj¹tkiem s¹ algorytmy rekurencyjne. Bior¹c je pod uwagê
zaznaczy³bym wszystko.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>88.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Analizujemy
czêœciow¹ poprawnoœæ algorytmu. Powinniœmy wiêc sprawdziæ:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>w³asnoœæ stopu</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>krok
indukcyjny <o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>czy niezmiennik pêtli jest prawdziwy po
wejœciu do pêtli dla danych spe³niaj¹cych warunek pocz¹tkowy</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>czy
niezmiennik pêtli jest prawdziwy po wejœciu do pêtli dla ka¿dych danych wejœciowych<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* algorytm jest czêœciowo poprawny,
jeœli dla warunków pocz¹tkowych siê zatrzyma i da wynik spe³niaj¹cy warunek
koñcowy lub nie zatrzyma siê</span><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>89.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech f(n)=n
2 <sup>lg(n)</sup>, wtedy prawd¹ jest, ¿e:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>f(n) × f(n)=&#937;(n<sup>3</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>f(n) × f(n)= &#920;(n<sup>3</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>f(n)
=O(n<sup>3</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>f(n)
= &#937; (2<sup>n</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>f(n)=&#920; (n<sup>2</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>f(n)+f(n)=&#920;(n<sup>3</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>f(n)+f(n)=O(n<sup>3</sup>)</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* f(n)=n2<sup>lg(n)</sup> = n<sup>2</sup></span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>90.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Pesymistycznie
operacja wyszukiwania elementu w n-elementowym drzewie AVL: Niech f(n)=n 2 <sup>lg(n)</sup>,
wtedy prawd¹ jest, ¿e:<o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>wymaga
&#920;(logn) pamiêci<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>ma z³o¿onoœæ obliczeniow¹ O(lg n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>wymaga &#920;(1) pamiêci</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* po to jest AVL<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>91.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Rozwa¿my
algorytm Hoare’a wyszukania elementu k-tego co do wielkoœci w nieuporz¹dkowanym
uniwersum rozmiaru n, wtedy:<span style='mso-spacerun:yes'>  </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>z³o¿onoœæ pesymistyczna algorytmu jest
rzêdu co najmniej n<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>z³o¿onoœæ
œrednia algorytmu jest rzêdu co najwy¿ej lg(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>liczba
wywo³añ procedury podzia³u (np. Split, Partition) jest rzêdu co najwy¿ej k<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>z³o¿onoœæ pesymistyczna algorytmu jest
rzêdu co najwy¿ej n<sup>2</sup><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*ad1: bo musi zajrzeæ do wszystkich
danych<br>
ad2: œrednio jest linowy<br>
ad3: jeœli mamy pecha, to w pesymistycznym przypadku zawsze wybieramy
najwiêkszy element, wiêc wywo³ujemy split/partition n-1 razy (maj¹c wówczas
kwadratow¹ z³o¿onoœc)<br>
ad4: true</span><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>92.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech Alg1
oraz Alg2 bêd¹ algorytmami takimi, ¿e T(Alg1,n)=O(nlg(n)) oraz<span
style='mso-spacerun:yes'>  </span>A(Alg2,n)=O(lg(n!)) i W(Alg2,n)=&#920;(n<sup>3</sup>).
Rozwa¿my teraz algorytm Alg3 taki, ¿e Alg3(n)=<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>{<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>int
i=0; <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>while(i&lt;n)
do <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='font-size:10.0pt;mso-ansi-language:EN-US'>if((i
MOD 2)= =0)<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>Alg1(i) <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>else Alg2(i); <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>i=i+1 <o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>od<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>},<o:p></o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='text-indent:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'>wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>A(Alg3,n)=&#920;(n<sup>3</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>A(Alg3,n)=O(n<sup>2</sup>)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>W(Alg3,n)=&#937;(n<sup>3</sup>lg(n))</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>* alg1 i alg2 wykonujemy mniej wiêcej
n/2 razy, wiêc W(alg3)=n(W(alg1)+W(alg2))=n*(O(nlgn)+&#920;(n<sup>3</sup>))=&#920;(n<sup>4</sup>),
A(alg3)=n(A(alg1)+A(alg2))=n(O(nlgn)+O(nlgn))=O(n<sup>2</sup>lgn)</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>93.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Niech <span
style='mso-spacerun:yes'> </span>X bêdzie tablic¹ n losowych liczb naturalnych
oraz SS, IS, QS bêd¹ odpowiednio algorytmami sortowania przez selekcjê,
sortowania przez wybór i sortowania szybkiego, wtedy:<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>W(QS(SS(IS(X))),n)= </span><span
style='font-size:10.0pt'>&#937;</span><span lang=EN-US style='font-size:10.0pt;
mso-ansi-language:EN-US'>(n)<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>A(IS(QS(X)),n)=O(lg(n!))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;background:aqua;mso-highlight:aqua;mso-ansi-language:
EN-US'>A(QS(IS(SS(X))),n)=O(n<sup>3</sup>)</span><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span lang=EN-US
style='font-size:10.0pt;mso-ansi-language:EN-US'>W(SS(IS(X)),n)=&#920;(n×lg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>A(SS(QS(X)),n)=O(n×lg(n))<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*ad1: quickSort dla posortowanych
danych dzia³a w czasie O(n<sup>2</sup>)<br>
ad2: quickSort œrednio dzia³a w czasie O(nlgn), a insertionSort dzia³a w czasie
liniowym dla posortowanych danych<br>
ad3: nie znam sortowanie, którego nie mo¿na ograniczyæzgóry przez n<sup>3</sup><br>
ad4/5: selectionSort dzia³a w czasie &#920;(n<sup>2</sup>)</span><b
style='mso-bidi-font-weight:normal'><span style='font-size:7.0pt;mso-bidi-font-size:
10.0pt;color:#FF6600'><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>94.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Lepiej u¿yæ
algorytmu InsertionSort, zamiast MergeSort, kiedy…<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>dane s¹ prawie posortowane<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mamy do czynienia z bardzo ma³ymi danymi<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>mamy bardzo ma³o dodatkowej pamiêci</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>95.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Czym mo¿na
posortowaæ dane u¿ywaj¹c:<span style='color:#FF6600'> </span><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><b style='mso-bidi-font-weight:
normal'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>sortowania
kube³kowego, a w kube³kach posortowaæ dane u¿ywaj¹c algorytmu Dijkstry<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>sortowania
kube³kowego, a w kube³kach posortowaæ dane u¿ywaj¹c Sita Eratostenesa<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>RadixSort,a do sortowaia po poszczególnych
kolumnach sortowania kube³kowego, a w kube³kach stabilnej wersji QuickSort</span><span
style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt;background:aqua;
mso-highlight:aqua'>sortowania kube³kowego, a w kube³kach posortowaæ dane
u¿ywaj¹c QuickSort</span><span style='font-size:10.0pt'><span style='mso-tab-count:
1'>          </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:2.85pt;margin-bottom:
0cm;margin-left:2.85pt;margin-bottom:.0001pt;text-indent:15.15pt;mso-layout-grid-align:
none;text-autospace:none'><span style='font-size:10.0pt'>drzewa AVL<span
style='mso-tab-count:1'>  </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*ad 1/2: ani Dijkstra ani sito nie
sortuj¹<br>
ad3: wygl¹da, ¿e ma rêce i nogi, ale sobie nic nie dam uci¹æ</span><span
style='font-size:7.0pt;mso-bidi-font-size:10.0pt;color:#FF6600'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt;text-indent:-18.0pt;mso-list:l1 level1 lfo1;
tab-stops:list 0cm'><![if !supportLists]><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><span style='mso-list:Ignore'>96.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></span></b><![endif]><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt'>Który z
podanych poni¿ej ci¹gów jest asymptotycznie rosn¹cym ci¹giem funkcji zmiennej n
w dziedzinie liczb naturalnych dodatnich:<span style='color:#FF6600'> </span><o:p></o:p></span></b></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:10.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt;
background:aqua;mso-highlight:aqua'>2<sup>n</sup>, (3!)<sup>n/2</sup>, (3<sup>2</sup>)<sup>n/2</sup>,
(n/2)!, n!-7n, n<sup>n/3</sup></span><span style='font-size:10.0pt'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>2n<sup>-1</sup>,
lg(lg(n!)), lg(n)-3, n<sup>1/3</sup>, n<sup>3</sup>, 2<sup>n</sup>, 3<sup>n-2</sup><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:10.0pt'>lg(n),
lg(n!), n<sup>2</sup>, n<sup>2</sup>-n, n<sup>3</sup>+100, lg(n)×n!, n!<o:p></o:p></span></p>

<p class=MsoNormal><span style='font-size:10.0pt'><span style='mso-tab-count:
1'>                </span><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:18.0pt'><span style='font-size:9.0pt;
mso-bidi-font-size:12.0pt;color:#FF6600'>*ad1: ma³a nieœcis³oœæ: n!-7n = O(n<sup>n</sup>),
n<sup>n/3</sup>=O(n<sup>n</sup>), wiêc asympotycznie s¹ sobie równe, a w treœci
ci¹g ma byæ rosn¹cy (nieœcis³oœæ; czasem w testach jest dok³adnie napisane
niemalej¹cy itp. rosn¹cy mo¿e byæ zarówno œciœle rosn¹cy lub niemalej¹cy - to
pewnie mo¿na wybroniæ na ustnych, jeœli jest odznaczony w kluczu)<br>
ad2: lgn-3 &lt; lg(nlgn)<br>
ad3: n! &lt; n!lgn</span><span style='font-size:7.0pt;mso-bidi-font-size:10.0pt;
color:#FF6600'><span style='mso-tab-count:1'>                        </span><o:p></o:p></span></p>

</div>

</body>

</html>
