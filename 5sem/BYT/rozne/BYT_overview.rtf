{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fswiss\fcharset77 Helvetica-BoldOblique;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fswiss\fcharset77 Helvetica;
}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid0\'02\'05.;}{\levelnumbers\'01;}}{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\paperw11899\paperh16839\margl1440\margr1440\vieww25100\viewh15040\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\i\b\fs34 \cf0 In\uc0\u380 ynieria oprogramowania
\f1\i0  
\f2\b0 (ang. software engineering) - dyscyplina wiedzy zajmuj\uc0\u261 ca si\u281  wszelkimi aspektami zwi\u261 zanymi z budow\u261  du\u380 ych system\'97w informatycznych.
\f1\b \
\
1. Czym zajmuje si\uc0\u281  in\u380 ynieria oprogramowania?
\f2\b0 \
In\uc0\u380 ynieria oprogramowania jest wiedz\u261  empiryczn\u261  zajmuj\u261 c\u261  si\u281  wszelkimi aspektami zwi\u261 zanymi z budow\u261  du\u380 ych system\'97w informatycznych.\
\

\f1\b 2. Na czym polega kryzys oprogramowania?
\f2\b0 \
Kryzys oprogramowania polega na tym, \uc0\u380 e mimo rozwoju nowoczesnych technologii i znacz\u261 cych nak\u322 ad\'97w finansowych ponoszonych przy produkcji oprogramowania obserwuje si\u281  wiele niekonrzystnych zjawisk towarzysz\u261 cych jego wytwarzaniu.\
\

\f1\b 3. Jakie s\uc0\u261  cztery g\u322 owne zasady walki ze z\u322 o\u380 ono\u347 ci\u261  oprogramowania?
\f2\b0 \
Do najwa\uc0\u380 niejszych zasad walki ze z\u322 o\u380 ono\u347 ci\u261  oprogramowania nale\u380 \u261  zasady: dekompozycji, abstrakcji, ponownego u\u380 ycia i sprzyjania naturalnym ludzkim w\u322 asno\u347 ciom.\
\

\f1\b 4. W jakim celu stosuje si\uc0\u281  modelowanie poj\u281 ciowe?\

\f2\b0 Modelowanie poj\uc0\u281 ciowe stosuje si\u281  w celu minimalizacji luki mi\u281 dzy my\u347 leniem o rzeczywistym problemie a my\u347 leniem o wspieraj\u261 cym go systemie komputerowym.\
\

\f0\i\b Cykl \uc0\u380 yciowy
\f1\i0  
\f2\b0 (ang. software life cycle) - ci\uc0\u261 g aktywno\u347 ci i proces\'97w, kt\'97re s\u261  niezb\u281 dne do wytworzenia i utrzymania oprogramowania.\
\

\f1\b 5. Wymie\uc0\u324  kolejne etapy cyklu \u380 ycia oprogramowania.\

\f2\b0 Analiza, projektowanie, implementacja, testowanie, wdro\uc0\u380 enie.\
\

\f1\b 6. Kt\'97re role w zespole projektowym nie powinny by\uc0\u263  przydzielone jednej osobie?\

\f2\b0 Rola programisty i rola testera, poniewa\uc0\u380  najtrudniej zawsze jest znale\u378 \u263  swoje w\u322 asne b\u322 \u281 dy w kodzie aplikacji.\
\

\f1\b 7. Co jest pierwszym krokiem na drodze do wykonania aplikacji?\

\f2\b0 Pierwszym krokiem jest okre\uc0\u347 lenie wymaga\u324  dla budowanego systemu. Dost\u281 pny jest szereg metod badania wymaga\u324  u\u380 ytkownik\'97w: analiza istniej\u261 cej dokumentacji, wywiad, ankieta, analiza dokument\'97w (dynamicznych), obserwacja.\
\

\f0\i\b Etap wytwarzania oprogramowania
\f2\i0\b0  - okres mi\uc0\u281 dzy kolejnymi g\u322 \'97wnymi kamieniami milowymi procesu wytwarzania oprogramowania.\
\

\f1\b 8. Jaki jest pierwszy etap wytwarzania oprogramowania?\

\f2\b0 Pierwszym etapem jest faza strategiczna.\
\

\f0\i\b Metoda COCOMO 
\f2\i0\b0 Constructive Cost Model - metoda szacowania koszt\'97w przedsi\uc0\u281 wzi\u281 cia informatycznego na podstawie szacowanej liczby linii kodu.\
\

\f0\i\b Metoda punkt\'97w funkcyjnych
\f1\i0  
\f2\b0 Function Point Analysis - metoda szacowania koszt\'97w przedsi\uc0\u281 wzi\u281 cia informatycznego na podstawie analizy wymaga\u324 .\
\
\pard\pardeftab720\ql\qnatural

\f0\i\b \cf0 Metoda UCP
\f2\i0\b0  Use Case Point - metoda szacowania oprogramowania bazujaca na modelu przypadk\'97w u\uc0\u380 ycia; zbli\u380 ona do metody FPA. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 \

\f1\b 9. Na czym bazuje metoda szacowania COCOMO?\

\f2\b0 Metoda szacowania koszt\'97w projektu COCOMO bazuje na szacunkowej ca\uc0\u322 kowitej liczbie linii kodu w projekcie.\
\

\f1\b 10. Na czym bazuje metoda FPA?\

\f2\b0 Metoda FPA (punkt\'97w funkcyjnych) bazuje na zbiorze wymaga\uc0\u324  dla projektowanego systemu.\
\

\f0\i\b Wymagania funkcjonalne
\f1\i0  
\f2\b0 - wymagania opisuj\uc0\u261 ce funkcje wykonywane przez system.\
\

\f0\i\b Wymagania niefunkcjonalne
\f1\i0  
\f2\b0 - wymagania opisuj\uc0\u261 ce ograniczenia, przy kt\'97rych system ma realizowa\u263  wymagania funkcjonalne.\
\

\f1\b 11. Co to jest dokument wymaga\uc0\u324 ?\

\f2\b0 Dokument wymaga\uc0\u324  jest to formalny dokument zawieraj\u261 cy spis wszystkich wymaga\u324  funkcjonalnych i niefunkcjonalnych systemu wraz z miarami ich weryfikacji.\
\

\f1\b 12. Kto powinie\uc0\u324  zatwierdza\u263  dokument wymaga\u324 ?\

\f2\b0 Dokument wymaga\uc0\u324  powinien by\u263  zatwierdzony zar\'97wno przez klienta jak i wyknowac\u281  projektu.\
\

\f1\b 13. Jakie cechy powinien mie\uc0\u263  dobry dokument wymaga\u324 ?\

\f2\b0 Dobry dokument wymaga\uc0\u324  powinien by\u263  napisany w spos\'97b jasny i zrozumia\u322 y dla obu stron, by\u263  \u322 atwo modyfikowalny i powinien zaweira\u263  informacj\u281  o odpowiedzialno\u347 ci za poszczeg\'97lne wymagania i przyczyny ich identyfikacji.\
\

\f0\i\b Model analityczny
\f1\i0  
\f2\b0 - logiczny model systemu opisuj\uc0\u261 cy spos\'97b realizacji wymaga\u324  dla systemu abstrahuj\u261 cy od szczeg\'97\u322 \'97w implementacyjnych.\
\

\f0\i\b Model projektowy
\f1\i0  
\f2\b0 - logiczny model systemu opisuj\uc0\u261 cy spos\'97b realizacji wymaga\u324  dla systemu oraz szczeg\'97\u322 y implementacyjne.\
\

\f1\b 13. Dost\uc0\u281 p typu publiczny (public, +) oznacza...\

\f2\b0 Dost\uc0\u281 p dla wszystkich funkcji i metod.\
\

\f1\b 14. Dost\uc0\u281 p typu zabezpieczony (protected, #) oznacza...\

\f2\b0 Dost\uc0\u281 p dla metod danej klasy oraz jej specjalizacji.\
\

\f1\b 15. Dost\uc0\u281 p typu prywatny (private, -) oznacza...\

\f2\b0 Dost\uc0\u281 p tylko funkcji danej klasy.\
\

\f1\b 16. Co rozumie si\uc0\u281  zazwyczaj po poj\u281 ciem RAD?\

\f2\b0 Pod poj\uc0\u281 ciem RAD (Rapid Application Development) szybkie rozwijanie aplikacji rozumie si\u281  narz\u281 dzia i techniki programowania umo\u380 liwiaj\u261 ce szybk\u261  bydow\u281  prototyp\'97w lub gotowych aplikacji.\
\

\f1\b 17. Jakimi cechami powinien charakteryzowa\uc0\u263  si\u281  projekt, aby mo\u380 na go by\u322 o uzna\u263  za poprawny?\

\f2\b0 Aby projekt mo\uc0\u380 na by\u322 o uzna\u263  za poprawny powinien charakteryzowa\u263  si\u281  nast\u281 puj\u261 cymi cechami: kompletno\u347 ci\u261 ; niesprzeczno\u347 ci\u261 ; sp\'97jno\u347 ci\u261 ; zgodno\u347 ci\u261  z regu\u322 ami sk\u322 adniowymi notacji.\
\

\f0\i\b OOHDM
\f1\i0  
\f2\b0 - Object-Oriented Hypermedia Design Model - metodyka projektowania aplikacji internetowych objemuj\uc0\u261 ca zbieranie wymaga\u324 , budow\u281  modelu koncepcyjnego, modelu nawigacyjnego i modelu abstrakcyjnego interfejsu u\u380 ytkownika.\
\

\f0\i\b WSDM
\f2\i0\b0  - Web Site Design Method - metodyka projektowania aplikacji internetowych zorientowana na u\uc0\u380 ytkownika, przeznaczona g\u322 \'97wnie do tworzenia aplikacji o charakterze informacyjnym.\
\

\f0\i\b WebML
\f1\i0  
\f2\b0 - Web Modeling Language - rozbudowana metodyka projektowania aplikacji internetowych s\uc0\u322 u\u380 \u261 ca do wysokopoziomowego, niezale\u380 nego od platformy specyfikowania aplikacji zorientowanych na dane.\
\

\f1\b 18. Sposr\'97d metodyk projektowania aplikacji internetowych OOHDM, WSDM i WebML najbardziej rozbudowana jest...\

\f2\b0 Metodyka WebML.\
\

\f1\b 19. Model kocepcyjny w metodyce OOHDM przedstawia...\

\f2\b0 Dane przechowywane w systemie internetowym.\
\

\f1\b 20. W metodyce WebML do okre\uc0\u347 lania po\u322 \u261 czenia pomi\u281 dzy stronami i jednostkami tre\u347 ci oraz definiowania sposob\'97w nawigacji pomi\u281 dzy nimi stosuje si\u281 ...\

\f2\b0 Model nawigacyjny.\
\

\f0\i\b Systemy B2B
\f1\i0  
\f2\b0 - system business-to-business - klasa system\'97w przeznaczonych g\uc0\u322 \'97wnie do wspierania proces\'97w biznesowych zachodz\u261 cych w kontaktach mi\u281 dzy firmami.\
\

\f0\i\b Systemy B2C
\f1\i0  
\f2\b0 - systemy business-to-consumers - klasa system\'97w przeznaczonych g\uc0\u322 \'97wnie do wspierania proces\'97w biznesowych zachodz\u261 cych w kontaktach mi\u281 dzy firm\u261  a odbiorc\u261  ko\u324 cowym.\
\

\f1\b 21. Jakie warunki musz\uc0\u261  by\u263  spe\u322 nione, aby mo\u380 na by\u322 o m\'97wi\u263  o elektornicznym biznesie?\

\f2\b0 Aby mo\uc0\u380 na by\u322 o m\'97wi\u263  o e-biznesie, wszyscy jego uczesnticy musz\u261 : dzia\u322 a\u263  we wsp\'97lne sieci; pracowa\u263  w tym samym katalogu; rozporz\u261 dza\u263  pewnymi \u347 rodkami umo\u380 liwiaj\u261 cymi dostawy towar\'97w; mie\u263  mo\u380 liwo\u347 \u263  rozliczenia si\u281  po zawarciu transakcji.\
\

\f1\b 22. Jakie s\uc0\u261  g\u322 \'97wne modele stosowane w handlu elektroniczym?\

\f2\b0 G\uc0\u322 \'97wne modele to: model brokerski, model dopasowany do indywidualnych potrzeb klienta oraz model kontaktowy.\
\

\f1\b 23. Jakie podstawowe elementy wchodz\uc0\u261  w sk\u322 ad architektury SOA?\

\f2\b0 Architektura Service Oriented Architecture sk\uc0\u322 \u261 da si\u281  z trzech g\u322 \'97wnych sk\u322 adnik\'97w (r\'97l): \

\f1\b \
Service Provider
\f2\b0 , czyli Dostawca Us\uc0\u322 ug. Jest to taki w\u281 ze\u322  sieci (w intranecie, b\u261 d\u378  Internecie), kt\'97ry udost\u281 pnia dost\u281 p do interfejs\'97w programowych jakiego\u347  komponentu biznesowego lub podsystemu, dostarczaj\u261 cych pewnego zestawu funkcjonalno\u347 ci. \

\f1\b \
Service Consumer
\f2\b0 , czyli U\uc0\u380 ytkownik Serwisu (klient). W\u281 ze\u322  w sieci, kt\'97ry u\u380 ywa tego zdalnego komponentu, aby stworzy\u263  w\u322 asne rozwi\u261 zanie (aplikacj\u281 ). W architekturze SOA klient, czyli konsument serwisu nazywany jest w\u281 z\u322 em. \
\

\f1\b Service Broker
\f2\b0 , czyli Po\uc0\u347 rednik. W\u281 ze\u322  w sieci, kt\'97ry jest repozytorium opis\'97w serwis\'97w udost\u281 pnianych przez ich dostawc\'97w. Jest to wi\u281 c odpowiednik ksi\u261 \u380 ki telefonicznej w telefonii. Tw\'97rca zdalengo komponentu umieszcza informacj\u281  o nim u Po\u347 rednika, natomiast klient dzi\u281 ki takiemu repozytorium jest w stanie odnale\u378 \u263  interesuj\u261 c\u261  go us\u322 ug\u281 .\
\
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 24. Na czym polega zasada ograniczonego dost\uc0\u281 pu?
\f2\b0 \
Zasada ograniczonego dost\uc0\u281 pu jest jedn\u261  z podstawowych zasad bezpiecze\u324 stwa. Mo\u380 na j\u261  sformu\u322 owa\u263  w spos\'97b nast\u281 puj\u261 cy: dost\u281 p do czegokolwiek powinien by\u263  ograniczony tylko do tego co jest niezb\u281 dne.\
\

\f1\b 25. Z jakich element\'97w sk\uc0\u322 ada si\u281  system statycznej mocnej kontroli typ\'97w?
\f2\b0 \
System mocnej statycznej kontroli typu zawiera nast\uc0\u281 puj\u261 ce elementy:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0\cf0 {\listtext	\'a5	}Specyfikacja typ\'97w wszystkich zmiennych i obiekt\'97w, kt\'97re wyst\uc0\u281 puj\u261  w programie, np.: \u8232 \u8232 typedef TypPrac = struct \{ string nazwisko, int zarobek, Dzia\u322  pracuje_w, int zarobek_netto() \}; \u8232 TypPrac Pracownik; \u8232 \
{\listtext	\'a5	}Specyfikacja sygnatur wszystkich operator\'97w, procedur, funkcji, metod, np.: \uc0\u8232 \u8232 boolean sprawd\u378  ( in TypPrac prac, in TypDzia\u322  dzia\u322 , out int ile_lat_pracuje );\u8232 \
{\listtext	\'a5	}Specyfikacja interfejs\'97w modu\uc0\u322 \'97w, klas i innych hermetyzowanych abstrakcji programistycznych. \u8232 \u8232 \
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 26. Z jakich operacji mo\uc0\u380 e sk\u322 ada\u263  si\u281  transakcja?
\f2\b0 \
Ka\uc0\u380 da transakcja mo\u380 e sk\u322 ada\u263  si\u281  z nast\u281 puj\u261 cych operacji:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0\cf0 {\listtext	\'a5	}czytanie danej x przez transakcje T,\
{\listtext	\'a5	}zapisanie danej x przez transakcj\uc0\u281  T,\
{\listtext	\'a5	}wycofanie transakcji T,\
{\listtext	\'a5	}zatwierdzenie transakcji T.\
\pard\tx566\pardeftab720\ql\qnatural
\cf0 \

\f0\i\b B\uc0\u322 \u261 d 
\f2\i0\b0 - niepoprawna konstrukcja znajduj\uc0\u261 ca si\u281  w programie, kt\'97ra mo\u380 e doprowadzi\u263  do jego niew\u322 a\u347 ciwego dzia\u322 ania.\
\

\f0\i\b B\uc0\u322 \u281 dne wykonanie 
\f2\i0\b0 - niepoprawne dzia\uc0\u322 anie systemu w trakcie jego pracy.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 \

\f1\b 27. Wyja\uc0\u347 ni\u263  r\'97\u380 nic\u281  mi\u281 dzy przej\u347 ciem a audytem.
\f2\b0 \
Przej\uc0\u347 cie jest wczesn\u261  ocen\u261  dokument\'97w, modeli, projekt\'97w i kodu. Jego celem jest zidentyfikowanie defekt\'97w i rozwa\u380 enie mo\u380 liwych rozwi\u261 za\u324 , a celem wt\'97rnym jest szkolenie i rozwi\u261 zanie problem\'97w stylistycznych (np. z form\u261  kodu, dokumentacji, interfejs\'97w u\u380 ytkownika). Audyt natomiast jest form\u261  przegl\u261 du potwierdzaj\u261 cym zgodno\u347 \u263  oprogramowania z wymaganiami, specyfikacjami, zaleceniami, standardami, procedurami, instrukcjami, kontraktami i licencjami. Obiektywno\u347 \u263  audytu wymaga, aby by\u322  on przeprowadzony przez osoby niezale\u380 ne od zespo\u322 u projektowego.\
\

\f1\b 28. Wyja\uc0\u347 nij powody, dla kt\'97ych inspekcja nie jest powszechnie stosown\u261  form\u261  kontroli oprogramowania?
\f2\b0 \
Brak powszechno\uc0\u347 ci inspekcji wynika mi\u281 dzy innymi z konieczno\u347 ci prawid\u322 owego jej zaplanowania i wykonania przy udziale kompetentnych os\'97b. Ni wymaga ona natomiast specjalizowanych narz\u281 dzi. Dodatkowo analiza koszt\'97w i zysk\'97w inspekcji nie jest prosta. Inspekcja mo\u380 e nie przynie\u347 \u263  spodziewanych korzy\u347 ci je\u347 li przeprowadzana jest ocena os\'97b na podstawie zebranych metryk lub zaanga\u380 owani s\u261  s\u322 abi kontrolerzy \
\

\f1\b 29. Kiedy przeprowadza si\uc0\u281  testy akceptacyjne?
\f2\b0 \
Testy akceptacyjne przeprowadza si\uc0\u281  w momencie przekazania oprogramowania przedstawicielowi klienta. \
\
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 30. Na czym polega tak zwany efekt skali?
\f2\b0 \
Efekt skali polega na wyk\uc0\u322 adniczym wzro\u347 cie zu\u380 ycia zasob\'97w w projekcie w funkcji wielko\u347 ci projektu. \
\

\f1\b 31. Co uzna\uc0\u322 by\u347  za podstawow\u261  zalet\u281  metody FPA?
\f2\b0 \
Podstawow\uc0\u261  zalet\u261  FPA jest niezale\u380 no\u347 \u263  metody od technologii, j\u281 zyka programowania i fazy \u380 ycia projektu a tak\u380 e od jako\u347 ci jego konstrukcji. Zalet tych nie maj\u261  inne znane metody miary wielko\u347 ci aplikacji, jak na przyk\u322 ad LOC (Lines Of Code). \
\

\f1\b 32. Jak nale\uc0\u380 y rozumie\u263  poj\u281 cie aktor \u347 rednio z\u322 o\u380 ony stosowane w metodzie UCP?
\f2\b0 \
Aktor \uc0\u347 rednio-z\u322 o\u380 ony to najcz\u281 \u347 ciej system zewn\u281 trzny, dost\u281 pny przez protok\'97\u322  z rodziny TCP/IP, HTTP lub podobny, ewentualnie poprzez terminal znakowy. W tym typie mieszcz\u261  si\u281  r\'97wnie\u380  zbiory danych. \
\
\pard\pardeftab720\ql\qnatural

\f0\i\b \cf0 pozycja konfiguracji
\f2\i0\b0  - element sk\uc0\u322 \u261 dowy projektu obj\u281 ty zarz\u261 dzaniem konfiguracj\u261 , np. dokument, harmonogram, specyfiakcja techniczna, modu\u322  oprogramowania, biblioteka itp.\
\

\f0\i\b produkt bazowy
\f2\i0\b0  - pozycja konfiguracji oceniona i zaakceptowana formalnie przez odpowiednie cia\uc0\u322 o weryfikacyjne jako zako\u324 czona, stanowi\u261 ca podstaw\u281  do dalszych faz rozwoju projektu. \
\
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 33. W jaki spos\'97b modyfikuje si\uc0\u281  produkty bazowe?
\f2\b0 \
Produkty bazowe s\uc0\u261  niemodyfikowalne. \
\

\f1\b 34. Wymieni\uc0\u263  najwa\u380 niejsze typy pozycji konfiguracji.
\f2\b0 \
Trzy podstawowe typy PK, to:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls3\ilvl0\cf0 {\listtext	\'a5	}\'ca \'ca \uc0\u378 r\'97d\u322 owa PK (np. tekst programu),\
{\listtext	\'a5	}\'ca \'ca pochodna PK (np. binarny kod programu),\
{\listtext	\'a5	}\'ca \'ca narz\uc0\u281 dzie dla generowania pochodnej PK ze \u378 r\'97d\u322 owej PK (np. kompilator).\
\pard\pardeftab720\ql\qnatural
\cf0 \
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 35. Gdzie mog\uc0\u261  by\u263  przechowywane pozycje konfiguracji?
\f2\b0 \
PK mo\uc0\u380 e by\u263  przechowywana w jedenej z nast\u281 puja\u263 ych bibliotek konfiguracji oprogramowania:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls4\ilvl0\cf0 {\listtext	\'a5	}bibliotece zwi\uc0\u261 zane z bie\u380 \u261 cym rozwojem oprogramowania,\
{\listtext	\'a5	}bibliotece uko\uc0\u324 czonych (bazowych) produkt\'97w programistycznych,\
{\listtext	\'a5	}archiwum (przechowywanie nieaktualnych kod\'97w i dokument\'97w).\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 \
\pard\pardeftab720\ql\qnatural

\f0\i\b \cf0 Jako\uc0\u347 \u263 
\f2\i0\b0  - og\'97\uc0\u322  cech i w\u322 a\u347 ciwo\u347 ci wyrobu lub us\u322 ugi decyduj\u261 cy o zdolno\u347 ci wyrobu lub us\u322 ugi do zaspokojenia stwierdzonych lub przewidywanych potrzeb u\u380 ytkownika produktu.\
\

\f0\i\b System jako\uc0\u347 ci 
\f2\i0\b0 - odpowiednio zbudowana struktura organizacyjna z jednoznacznym podzia\uc0\u322 em odpowiedzialno\u347 ci, okre\u347 leniem procedur, proces\'97w i zasob\'97w, umo\u380 liwiaj\u261 cych wdro\u380 enie tzw. zarz\u261 dzania jako\u347 ci\u261 .\
\

\f0\i\b Zarz\uc0\u261 dzanie jako\u347 ci\u261  
\f2\i0\b0 - jest zwi\uc0\u261 zane z aspektem ca\u322 o\u347 ci funkcji zarz\u261 dzania organizacji, kt\'97ry jest decyduj\u261 cy w okre\u347 laniu i wdra\u380 aniu polityki jako\u347 ci.\
\

\f0\i\b Polityka jako\uc0\u347 ci
\f2\i0\b0  - og\'97\uc0\u322  zamierze\u324  i kierunk\'97w dzia\u322 a\u324  organizacji dotycz\u261 cych jako\u347 ci, w spos\'97b formalny wyra\u380 ony przez najwy\u380 sze kierownictwo organizacji, b\u281 d\u261 cej systemem jako\u347 ci.\
\

\f0\i\b Audyt jako\uc0\u347 ci 
\f2\i0\b0 - systematyczne i niezale\uc0\u380 ne badanie, maj\u261 ce okre\u347 li\u263 , czy dzia\u322 ania dotycz\u261 ce jako\u347 ci i ich wyniki odpowiadaj\u261  zaplanowanym ustaleniom, czy te ustalenia s\u261  skutecznie realizowane i czy pozwalaj\u261  na osi\u261 gniecie odpowiedniego poziomu jako\u347 ci.\
\
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 36. Czym jest Zarz\uc0\u261 dzanie Jako\u347 ci\u261  Oprogramowania (ZJO)?
\f2\b0 \
ZJO oznacza zesp\'97\uc0\u322  dzia\u322 a\u324  zmierzaj\u261 cych do sprawdzania czy plany s\u261  zdefiniowane zgodnie ze standardami, czy procedury s\u261  wykonywane zgodnie z planami, czy produkty s\u261  implementowane zgodnie z planami. \
\

\f1\b 37. Wymieni\uc0\u263  poziomy dojrza\u322 o\u347 ci proces\'97w wytw\'97rczych w modelu CMM.
\f2\b0 \
W modelu CMM wyr\'97\uc0\u380 niono 5 poziom\'97w dojrza\u322 o\u347 ci wytw\'97rc\'97w (poczynaj\u261 c od poziomu najni\u380 szego):\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls5\ilvl0\cf0 {\listtext	1.	}poziom pocz\uc0\u261 tkowy - l (proces chaotyczny)\
{\listtext	2.	}poziom powtarzalny - 2 (proces zindywidualizowany)\
{\listtext	3.	}poziom zdefiniowany - 3 (proces zinstytucjonalizowany)\
{\listtext	4.	}poziom zarz\uc0\u261 dzany - 4 (proces + informacje zwrotne dla sterowania procesem)\
{\listtext	5.	}poziom optymalizuj\uc0\u261 cy - 5 (proces + informacje zwrotne wp\u322 ywaj\u261 ce na ulepszenie procesu)\
\pard\pardeftab720\ql\qnatural
\cf0 \
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 38. Z jakich podstawowych rozdzia\uc0\u322 \'97w powinien sk\u322 ada\u263  si\u281  Plan Zarz\u261 dzania Jako\u347 ci\u261  Oprogramowania (PZJO)?
\f2\b0 \
PZJO powinien by\uc0\u263  podzielony na 4 rozdzia\u322 y, ka\u380 dy dla nast\u281 puj\u261 cych faz rozwoju oprogramowania:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls6\ilvl0\cf0 {\listtext	1.	}\'ca \'ca PZJO dla fazy wymaga\uc0\u324  u\u380 ytkownika i analizy\
{\listtext	2.	}\'ca \'ca PZJO dla fazy projektu architektury\
{\listtext	3.	}\'ca \'ca PZJO dla fazy projektowania i konstrukcji\
{\listtext	4.	}\'ca \'ca PZJO dla fazy budowy, testowania i instalacji oprogramowania. \
\pard\tx566\pardeftab720\ql\qnatural
\cf0 \
\pard\pardeftab720\ql\qnatural

\f0\i\b \cf0 dokument ADD
\f2\i0\b0  - architectural design document - dokument projektu architektury systemu.\
\

\f0\i\b dokument SRD
\f2\i0\b0  - software requirements document - dokument wymaga\uc0\u324  na oprogramowanie.\
\

\f0\i\b dokument URD
\f2\i0\b0  - user requirements document - dokument wymaga\uc0\u324  u\u380 ytkownika.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural
\cf0 \
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 39. Portret psychologiczny zespo\uc0\u322 u projektowego wyr\'97\u380 nia trzy typy psychologiczne. Jakie to typy? Do kt\'97rego z nich zaliczasz siebie?
\f2\b0 \
Czynniki psychologiczne maj\uc0\u261  zasadniczy wp\u322 yw na efektywno\u347 \u263  pracy zespo\u322 u. Wyr\'97\u380 nia si\u281  nast\u281 puj\u261 ce typy psychologiczne:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls7\ilvl0\cf0 {\listtext	1.	}Zorientowani na zadania (task-oriented). Osoby samowystarczalne, zdolne, zamkni\uc0\u281 te, agresywne, lubi\u261 ce wsp\'97\u322 zawodnictwo, niezale\u380 ne.\
{\listtext	2.	}Zorientowani na siebie (self-oriented). Osoby niezgodne, dogmatyczne, agresywne, zamkni\uc0\u281 te, lubi\u261 ce wsp\'97\u322 zawodnictwo, zazdrosne.\
{\listtext	3.	}Zorientowani na interakcje (interaction-oriented). Osoby nieagresywne, o niewielkiej potrzebie autonomii i indywidualnych osi\uc0\u261 gni\u281 \u263 , pomocne, przyjazne.\
\pard\pardeftab720\ql\qnatural
\cf0 \
\pard\pardeftab720\ql\qnatural

\f1\b \cf0 40. W jakim proejkcie warto zastosowa\uc0\u263  struktur\u281  organizacyjna zespo\u322 u oparta na modelu gwiazdy? 
\f2\b0 \
Struktura gwia\uc0\u378 dzista jest przydatna wtedy, gdy w sk\u322 ad zespo\u322 u wchodzi wielu niedo\u347 wiadczonych pracownik\'97w. Szef kontroluje i koordynuje prace. Wielko\u347 \u263  zespo\u322 u mo\u380 e by\u263  znacznie wi\u281 ksza ni\u380  w strukturze sieciowej. Du\u380 e problemy mog\u261  wyst\u261 pi\u263  w momencie odej\u347 cia szefa zespo\u322 u \
\

\f1\b 41. Wymie\uc0\u324  i kr\'97tko scharakteryzuj poziomy dojrza\u322 o\u347 ci procesu wytwarzania.
\f2\b0 \
Wyr\'97\uc0\u380 nia si\u281  pi\u281 \u263  poziom\'97w rozwoju organizacji z punktu widzenia dojrza\u322 o\u347 ci procesu:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls8\ilvl0\cf0 {\listtext	\'a5	}Pocz\uc0\u261 tkowy Na tym poziomie nie istniej\u261  \u380 adne standardy procesu. Decyzje s\u261  podejmowane ad hoc. Ten poziom mog\u261  mie\u263  r\'97wnie\u380  firmy o dobrym zaawansowaniu technicznym.\
{\listtext	\'a5	}Powtarzalny Poszczeg\'97lne przedsi\uc0\u281 wzi\u281 cia wykonywane s\u261  w podobny spos\'97b. W firmie istnieje co do tego zgoda, mo\u380 na wiec m\'97wi\u263  o pewnym standardzie firmy, kt\'97re s\u261  jednak standardami de facto. Standardy te nie s\u261  udokumentowane. Nie istniej\u261  \u347 cis\u322 e procedury kontroli.\
{\listtext	\'a5	}Zarz\uc0\u261 dzany Standardy post\u281 powania s\u261  dobrze zdefiniowane i sformalizowane, Istnieje \u347 cis\u322 a kontrola przestrzegania standard\'97w. S\u261  osoby odpowiedzialne za pracowanie i uaktualnianie standard\'97w.\
{\listtext	\'a5	}Mierzony Proces nie tylko podlega kontroli na zgodno\uc0\u347 \u263  ze standardami, ale jest mierzony w spos\'97b ilo\u347 ciowy. Mierzona jest np. wydajno\u347 \u263 . Wyniki s\u261  wykorzystywane do poprawy sposob\'97w realizacji przysz\u322 ych przedsi\u281 wzi\u281 \u263 .\
{\listtext	\'a5	}Optymalizowany Standardy s\uc0\u261  w ci\u261 g\u322 y spos\'97b uaktualniane tak, aby uwzgl\u281 dni\u263  do\u347 wiadczenia w przysz\u322 ych przedsi\u281 wzi\u281 ciach. Standardy zawieraj\u261  elementy pozwalaj\u261 ce na dostrojenie procesu do aktualnych potrzeb.\
}