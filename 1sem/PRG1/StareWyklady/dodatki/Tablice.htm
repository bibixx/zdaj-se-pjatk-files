<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><html><head>
 	
  <meta http-equiv="CONTENT-TYPE" content="text/html; charset=iso-8859-2"><title>Tablice</title>
  
 	 	
  <meta name="GENERATOR" content="OpenOffice.org 1.0  (Win32)">
 	
  <meta name="AUTHOR" content="Krzysztof Barteczko">
 	
  <meta name="CREATED" content="20011102;4100000">
 	
  <meta name="CHANGEDBY" content="Krzysztof Barteczko">
 	
  <meta name="CHANGED" content="20020622;6480000">
 	
	<link rel="stylesheet" type="text/css"
href="style/common.css">

  <meta name="author" content="Krzysztof Barteczko"></head>

<body bgcolor="whitesmoke">
 
<p>Tablica jest szczególnym przypadkiem zbioru danych wielowymiarowych.</p>
 
<p>Dane w zbiorze danych wielowymiarowych mog± byæ traktowane
jako punkty w k-wymiarowej (abstrakcyjnej) przestrzeni, z którymi skojarzona
jest dodatkowa informacja. Ka¿dy z wymiarów przedstawia jak±¶ cechê danych.
Zestaw warto¶ci cech konkretnej danej formuje punkt k-przestrzeni, a warto¶æ
danej jest konkretn± informacj± skojarzon± z tym punktem. </p>
 
<p><b>Wielowymiarowy zbiór danych jest zatem zbiorem
zestawów (K<span lang="en-US"><sub>1</sub>, K<sub>2</sub>, .... K<sub>k</sub>
, I), </span></b></p>
 
<p><b><span lang="en-US">gdzie K<sub>i</sub> – klucz
w i-m wymiarze (warto¶æ i-ej cechy danej), I – informacja (warto¶æ samej
danej).</span></b></p>
  
<p>Np. dane o dziennym utargu sieci sklepów mog± byæ
przedstawione jako punkty dwuwymiarowej dyskretnej przestrzeni; wymiarami
s±  dni i lokalizacja, a informacja skojarzona z ka¿dym punktem okre¶la utarg.<br>
<br>
</p>
 
<center>
  <table width="615" border="1" bordercolor="#000000" cellpadding="5" cellspacing="0">
  <col width="143"><col width="144"><col width="144"><col width="143"><tbody>
    <tr valign="Top">
      <td width="143" nowrap="true">
      <p>Lokalizacja <b>&gt;&gt;</b></p>
   
      <p>Dni</p>
   </td>
      <td width="144">
      <p>Warszawa</p>
      </td>
      <td width="144">
      <p>Poznañ</p>
      </td>
      <td width="143">
      <p>Gdañsk</p>
      </td>
      </tr>
    <tr valign="Top">
      <td width="143">
      <p>1 lipca</p>
      </td>
      <td width="144">
      <p>10000</p>
    </td>
      <td width="144">
      <p>8000</p>
      </td>
      <td width="143">
      <p>9000</p>
      </td>
      </tr>
    <tr valign="Top">
      <td width="143">
      <p>2 lipca</p>
      </td>
      <td width="144">
      <p>12000</p>
     </td>
      <td width="144">
      <p>7000</p>
       			</big></td>
      <td width="143"> 				
      <p>10000</p>
       			</td>
      </tr>
    <tr valign="Top">
      <td width="143"> 				
      <p>3 lipca</p>
       			</td>
      <td width="144"> 				
      <p>9000</p>
       			</td>
      <td width="144"> 				
      <p>6000</p>
       			</td>
      <td width="143"> 				
      <p>13000</p>
       			</td>
      </tr>
    </tbody>
</table>
 </center>
  
<p>Zauwa¿my wiêc, ¿e to co ogólnie
mo¿emy traktowaæ jako tablicê wielowymiarow±, w teorii struktur danych nazywa
siê zbiorem danych wielowymiarowych (multidimensional data set)..</p>
<p>Natomiast "programistyczne" pojêcie tablicy wielowymiarowej
(multidimensional array) jest tego szczególnym przypadkiem </p>
 
<p>Tablica wielowymiarowa – to szczególna postaæ zbioru
danych wielowymiarowych, mianowicie taka, w której cechy danych opisywane
s± przez liczby ca³kowite (<b>w szczególno¶ci</b> nieujemne).
  </p>
  
<p class="western" style="page-break-before: always; "><b>Tablica wielowymiarowa
jest zatem zbiorem zestawów (i<sub>1</sub>, i<sub>2</sub>, ...  i<sub>n</sub>
, v), </b> </p>
 
<p><b>gdzie :  i<sub>k</sub> </b><b>nale¿y do zbioru I<sub>k,   </sub>  I<sub>k</sub> – skoñczone zbiory liczb ca³kowitych
(k =1,2..n), v – warto¶æ danej</b>.  </p>
 
<p><br>
 </p>
 
<p>Zauwa¿my: dane w wielowymiarowej tablicy reprezentuj±
logiczn± ca³o¶æ (np. utarg), a zatem w jêzykach z typami bêd± <b>
tego samego typu</b>. I  - co wyró¿nia tablice spo¶ród innych struktur danych – dostêp do danych
jest swobodny (tzn. <b>nie wymaga uprzedniego dostêpu do innych
elementów zbioru</b>).  </p>
  
<p>Np. w przyk³adowej tablicy utargów pierwszy wymiar "dni"
oznaczany jest indeksem  "i" z  mo¿liwymi warto¶ciami 0, 1, 2  oznaczaj±cymi
"1 lipca",  "2 lipca",  "3 lipca",. drugi wymiar "lokalizacja" – indeksem
j z warto¶ciami 0,1,2 oznaczaj±cymi "Warszawa", "Poznañ", "Gdañsk". Utarg
sklepu w Gdañsku z 1 lipca znajduje siê w tablicy na pozycji okre¶lanej przez
indeksy 0  (w wymiarze dni) i 2 (w wymiarze lokalizacji).</p>
 
<p><br>

 </p>
 
<p style="line-height: 150%; "><font size="2"><font size="3">Maj±c ju¿ najogólniejsz±
definicjê tablicy  (<b>tablica jednowymiarowa jest szczególnym przypadkiem
tablicy wielowymiarowej</b>) wypada siê zastanowiæ czy i na ile pojêcie to
zosta³o wdro¿one w jêzyki programowania.</font></font></p>
  
<p style="line-height: 150%; "><font size="2"><font size="3">Odpowiadaj±c 
na to pytanie trzeba wyra¼nie rozgraniczyæ <b>dwie sfery</b>:</font></font></p>
 
<ul>
 	<li>
    <p style="line-height: 150%; "><font size="2"><font size="3"><b>jêzykow±</b>
 	(co i w jaki sposób bezpo¶rednio mo¿emy zapisaæ w tek¶cie 	programu, czy
logiczne, dotycz±ce dziedziny problemu, pojêcie 	tablicy wielowymiarowej
mo¿emy bezpo¶rednio odzwierciedliæ w 	programie za pomoc± ¶rodków jêzyka?)</font></font></p>
 	</li>
  <li>
    <p style="line-height: 150%; "><font size="2"><font size="3"><b>implementacyjn±</b>
 	(w jaki sposób tablice s± technicznie realizowane?).</font></font></p>
 </li>
</ul>
  
<p style="line-height: 150%; "><font size="3">Zobaczmy, jak przyk³adow± tablicê
utargów mo¿na przedstawiæ w jêzyku PL/I </font> </p>
 
<p style="line-height: 150%; "><font size="3">Np.</font></p>
 
<p style="line-height: 150%; "><font size="2"><font size="3">dcl utarg(3,3) 
decimal fixed(12,1);   /* deklaracja tablicy */</font></font></p>
 
<p style="line-height: 150%; "><font size="3">....</font></p>
 
<p style="line-height: 150%; "><font size="3">    do i = 1 to 3;</font></p>
 
<p style="line-height: 150%; "><font size="3">        do j = 1 to 3;</font></p>
 
<p style="line-height: 150%; "><font size="3">            utarg(i,j) = ...;
     /* odwo³anie do  elementu */</font></p>
 
<p style="line-height: 150%; "><font size="3">        end;</font></p>
 
<p style="line-height: 150%; "><font size="3">    end;</font></p>
 
<p style="line-height: 150%; "><br>
 </p>
 
<p style="line-height: 150%; "><font size="3">To samo mo¿emy zrobiæ w Javie,
za pomoc± nieco innej sk³adni</font></p>
  
<p style="line-height: 150%; "><font size="3">double[][] utarg = new double[3][3];</font></p>
 
<p style="line-height: 150%; "><font size="2"><font size="3">for (i=0; i
&lt; 3; i++)</font></font></p>
 
<p style="line-height: 150%; "><font size="3">    for (j=0; j&lt;3; j++)</font></p>
 
<p style="line-height: 150%; "><font size="3">        utarg[i][j] = ...;</font></p>
 
<p style="line-height: 150%; "><font size="3">  </font> </p>
 
<p style="line-height: 150%; "><br>
 </p>
 
<p style="line-height: 150%; "><font size="3">W jêzyku Rexx tablica wielowymiarowa
jest szczególnym przypadkiem tzw. "compound variable" (zmiennej z³o¿onej).
Mo¿emy napisaæ:</font></p>
 
<p style="line-height: 150%; "><font size="3">utarg.1.1 = 10000</font></p>
 
<p style="line-height: 150%; "><font size="3">ale równie dobrze mo¿emy napisaæ:</font></p>
 
<p style="line-height: 150%; "><font size="3">loc = "Warszawa"</font></p>
 
<p style="line-height: 150%; "><font size="3">day = "1 lipca"</font></p>
 
<p style="line-height: 150%; "><font size="3">utarg.day.loc = 10000</font></p>
  
<p style="line-height: 150%; "><font size="3">co jest, oczywi¶cie, du¿o bardziej
sensowne i odpowiadaj±ce ogólnemu pojêciu "tablicy".</font></p>
  
<p style="line-height: 150%; "><font size="3">Z kolei w jêzyku NetRexx – który
przej±³ z REXXa koncepcjê pamiêci asocjacyjnej - do tablicy "utarg" mogliby¶my
odwo³aæ siê tak : utarg["1 lipca"]["Warszawa"]. </font> </p>
 
<p style="line-height: 150%; "><font size="3">Oczywi¶cie, nic nie stoi na 
przeszkodzie (choæ nie by³oby to rozs±dne), by "pamiêtaæ na boku", ¿e "1
lipca" ma indeks i = 0, a "Warszawa" indeks j = 0 i pisaæ (w NetRexxie utarg[0][0]
)...</font></p>
  
<p style="line-height: 150%; "><font size="3">W ka¿dym ze wspomnianych jêzyków
tablice wielowymiarowe implementowane s± zupe³nie inaczej.</font></p>
  
<p style="line-height: 150%; "><font size="3">W PL/I tablica wielowymiarowa
jest realizowana jako struktura danych sk³adaj±ca siê (w przypadku dynamicznym)
z deskryptora tablicy (który okre¶la wymiary i zakresy indeksów w ka¿dym
z wymiarów) oraz samych danych – ci±g³ej sekwencji elementów tablicy, u³o¿onych
wierszami.</font></p>
  
<p style="line-height: 150%; "><font size="3">W Rexxie tablice wielowymiarowe
( i jednowymiarowa) realizowane s± na zasadzie pamiêci asocjacyjnej (zmienna
z³o¿ona sk³ada siê z rdzenia – stem – i kluczy, które nastêpuj± po kolejnych
kropkach – tail: praktycznie jest to implementowane jako odpowiednia struktura 
drzewiasta).</font></p>
  
<p style="line-height: 150%; "><font size="3">NetRexx t³umaczy swoje tablice
na jêzyk Javy. M.in. przy odwo³aniach asocjacyjnych – na odpowiednie drzewa
lub listy napisane w Javie, a je¶li tablica jest deklarowana – na proste
tablice Javy.</font></p>
  
<p style="line-height: 150%; "><font size="3">W Javie (jak w C i C++) tablica
wielowymiarowa implementowana jest jako swoista  "tablica tablic".<br>
Zatem tak naprawdê (z technicznego punktu widzena) istniej± tu tylko tablice
jednowymiarowe, a wielowymiarowo¶æ jest "symulowana" poprzez umieszczaniu
w tablicy (jako jej elementów) wskazañ na inne tablice (np. wiersze tablicy
dwuwymiarowej).<br>
</font></p>
 
<div id="sdfootnote2">
<p class="sdfootnote-western">  	</p>
 </div>
 
</body></html>