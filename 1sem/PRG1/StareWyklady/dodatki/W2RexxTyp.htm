<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
 
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-2">
  <title>Jêzyki z typami i jêzki beztypowe</title>
  
  <link rel="stylesheet" type="text/css" href="style/common.css">
</head>
 <body bgcolor="floralwhite">
<p>Wiêkszo¶æ jêzyków (w tym Java) wymaga, aby programista okre¶li³ w programie
<b>typy</b> zmiennych. Np. czy dana zmienna bêdzie reprezentowaæ liczb± ca³kowit±,
rzeczywist±, znak czy mo¿e ³añcuch znakowy.<br>
Takie wymaganie wynika z kilku przyczyn, m.in. z odzwierciedlania w programie
architektury sprzêtowej (dane ró¿nych typów zajmuj± ró¿ne miejsce w pamiêci)
oraz z prze¶wiadczenia, ¿e sprawdzanie zgodno¶ci typów (czy np. na zmienn±
typu ca³kowitoliczbowego nie staramy siê podstawiæ ³añcucha znakowego) w
trakcie kompilacji prowadzi do szybszego tworzenia niezawodnych programów.
Obie te przes³anki s± raczej s³abe: pierwsza niepotrzebnie zaprz±ta umys³
programisty szczegó³ami technicznymi, druga jest ostatnio mocno podwa¿ana
w nurcie tzw. Extreme Programming. <br>
Naprawdê wa¿ne zastosowanie pojêcie typu zmiennej  znajduje  natomiast w
programowaniu obiektowym, gdzie programista mo¿e tworzyæ w³asne typy danych.<br>
REXX nie jest jêzykiem obiektowym i Mike Cowlishow wybra³ doskona³e rozwi±zanie:
dane w programie nie maj± ustalonych typów, s± natomiast - zale¿nie od kontekstu
- traktowane jako liczby b±d¼ ³añcuchu znakowe. W operacjach arytmetycznych
napisy (i warto¶ci zmiennych), które mog± byæ traktowane jako liczby - s±
traktowane jako liczby, w operacjach na ³añcuchach znakowych (np. konkatenacji
lub przegl±daniu znaków ³añcucha) wszystkie dane (czy to o charakterze liczbowym,
czy to tekstowym) s± traktowane jako napisy.  <br>
<script language="JavaScript1.2" src="../js/dodatki.js"></script>  
</body>
</html>
